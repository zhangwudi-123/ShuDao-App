{"ast":null,"code":"import { __read } from \"tslib\";\nimport { useMemo, useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nexport default function useSelections(items, defaultSelected) {\n  if (defaultSelected === void 0) {\n    defaultSelected = [];\n  }\n\n  var _a = __read(useState(defaultSelected), 2),\n      selected = _a[0],\n      setSelected = _a[1];\n\n  var selectedSet = useMemo(function () {\n    return new Set(selected);\n  }, [selected]);\n\n  var isSelected = function (item) {\n    return selectedSet.has(item);\n  };\n\n  var select = function (item) {\n    selectedSet.add(item);\n    return setSelected(Array.from(selectedSet));\n  };\n\n  var unSelect = function (item) {\n    selectedSet.delete(item);\n    return setSelected(Array.from(selectedSet));\n  };\n\n  var toggle = function (item) {\n    if (isSelected(item)) {\n      unSelect(item);\n    } else {\n      select(item);\n    }\n  };\n\n  var selectAll = function () {\n    items.forEach(function (o) {\n      selectedSet.add(o);\n    });\n    setSelected(Array.from(selectedSet));\n  };\n\n  var unSelectAll = function () {\n    items.forEach(function (o) {\n      selectedSet.delete(o);\n    });\n    setSelected(Array.from(selectedSet));\n  };\n\n  var noneSelected = useMemo(function () {\n    return items.every(function (o) {\n      return !selectedSet.has(o);\n    });\n  }, [items, selectedSet]);\n  var allSelected = useMemo(function () {\n    return items.every(function (o) {\n      return selectedSet.has(o);\n    }) && !noneSelected;\n  }, [items, selectedSet, noneSelected]);\n  var partiallySelected = useMemo(function () {\n    return !noneSelected && !allSelected;\n  }, [noneSelected, allSelected]);\n\n  var toggleAll = function () {\n    return allSelected ? unSelectAll() : selectAll();\n  };\n\n  return {\n    selected: selected,\n    noneSelected: noneSelected,\n    allSelected: allSelected,\n    partiallySelected: partiallySelected,\n    setSelected: setSelected,\n    isSelected: isSelected,\n    select: useMemoizedFn(select),\n    unSelect: useMemoizedFn(unSelect),\n    toggle: useMemoizedFn(toggle),\n    selectAll: useMemoizedFn(selectAll),\n    unSelectAll: useMemoizedFn(unSelectAll),\n    toggleAll: useMemoizedFn(toggleAll)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}