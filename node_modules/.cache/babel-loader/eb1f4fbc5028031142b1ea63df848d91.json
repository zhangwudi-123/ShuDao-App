{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addPlugin = addPlugin;\nexports.registerPlugins = registerPlugins;\nexports.getComponent = getComponent;\nexports.pluginEvent = void 0;\n\nvar _toolkit = require(\"@hvisions/toolkit\");\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * @typedef {Object} NeedleRouter\n * @property {string} path\n * @property {boolean} [auth = true]\n * @property {React.ReactNode} component\n * @property {() => void} [beforeEnter]\n * @property {() => void} [afterEnter]\n * @property {() => void} [beforeLeave]\n *\n * @typedef {Object} LayoutExtraComponent\n * @property {string} [type]\n * @property {number} [index] 排序\n * @property {React.ReactNode} component\n *\n * @typedef {Object} NeedlePlugin\n * @property {(opt: {core: any}) => { router?: NeedleRouter[]; store?: any[], locale?: any[] }} [install]\n * @property {(opt: {core: any}) => { router?: NeedleRouter[]; store?: any[], locale?: any[] }} [default]\n * @property {'layout' | 'login'} [type]\n * @property {(opt: {core: any; config: Record<string, any>; loginComplete: (token: string, authData: any) => void}) => React.ReactNode} [getLoginComponent]\n * @property {(opt: {core: any; config: Record<string, any>; extraComponents: LayoutExtraComponent[]; logoutComplete: () => void; routers: NeedleRouter[]; routeView: React.ReactNode}) => React.ReactNode} [getLayoutComponent]\n * @property {(opt: {core: any}) => LayoutExtraComponent | LayoutExtraComponent[]} [layoutExtraComponents]\n * @property {(e: EventEmitter, opt: { core: any }) => void} [eventHandler]\n */\n\n/**\n * @type {NeedlePlugin[]}\n */\n\n\nvar plugins = [];\nvar pluginEvent = new _events.default();\n/**\n *\n *\n * @export\n * @param {NeedlePlugin} p\n */\n\nexports.pluginEvent = pluginEvent;\n\nfunction addPlugin(p) {\n  plugins.push(p);\n}\n/**\n *\n *\n * @export\n * @param {any} core\n * @returns {{ router: NeedleRouter[]; store: any{}, locales: any{} }}\n */\n\n\nfunction registerPlugins(core) {\n  var routers = [];\n  var stores = [];\n  var locales = []; // 获取路由/redux/国际化\n\n  plugins.forEach(function (p) {\n    if (p.install) {\n      var _ref = p.install({\n        core: core\n      }) || {},\n          _ref$router = _ref.router,\n          router = _ref$router === void 0 ? [] : _ref$router,\n          _ref$store = _ref.store,\n          store = _ref$store === void 0 ? {} : _ref$store,\n          _ref$locale = _ref.locale,\n          locale = _ref$locale === void 0 ? {} : _ref$locale;\n\n      routers = routers.concat(router);\n      stores.push(store);\n      locales.push(locale);\n    } // 处理事件\n\n\n    if (p.eventHandler) {\n      p.eventHandler(pluginEvent, {\n        core: core\n      });\n    }\n  });\n  return {\n    routers: routers,\n    stores: stores,\n    locales: locales\n  };\n}\n/**\n * ### 获取自定义插件组件\n * \n * 内置插件不需要使用插件方式加载.\n * \n * 这里只用来加载自定义插件,目前只支持`'layout | login'`两种插件.\n * \n * @param {string} key layout | login\n * @returns \n */\n\n\nfunction getComponent(key) {\n  var p = plugins.find(function (p) {\n    return p.type.toLowerCase() === key;\n  });\n\n  if (p && p.getComponent) {\n    return function (props) {\n      return p.getComponent(_objectSpread({\n        config: _toolkit.config.getPartConfig(key)\n      }, props));\n    };\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"script"}