{"ast":null,"code":"/* eslint no-control-regex: \"off\" */\nimport { window } from 'ssr-window'; // Remove Diacritics\n\nconst defaultDiacriticsRemovalap = [{\n  base: 'A',\n  letters: '\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'\n}, {\n  base: 'AA',\n  letters: '\\uA732'\n}, {\n  base: 'AE',\n  letters: '\\u00C6\\u01FC\\u01E2'\n}, {\n  base: 'AO',\n  letters: '\\uA734'\n}, {\n  base: 'AU',\n  letters: '\\uA736'\n}, {\n  base: 'AV',\n  letters: '\\uA738\\uA73A'\n}, {\n  base: 'AY',\n  letters: '\\uA73C'\n}, {\n  base: 'B',\n  letters: '\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'\n}, {\n  base: 'C',\n  letters: '\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'\n}, {\n  base: 'D',\n  letters: '\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779'\n}, {\n  base: 'DZ',\n  letters: '\\u01F1\\u01C4'\n}, {\n  base: 'Dz',\n  letters: '\\u01F2\\u01C5'\n}, {\n  base: 'E',\n  letters: '\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'\n}, {\n  base: 'F',\n  letters: '\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'\n}, {\n  base: 'G',\n  letters: '\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'\n}, {\n  base: 'H',\n  letters: '\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'\n}, {\n  base: 'I',\n  letters: '\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'\n}, {\n  base: 'J',\n  letters: '\\u004A\\u24BF\\uFF2A\\u0134\\u0248'\n}, {\n  base: 'K',\n  letters: '\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'\n}, {\n  base: 'L',\n  letters: '\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'\n}, {\n  base: 'LJ',\n  letters: '\\u01C7'\n}, {\n  base: 'Lj',\n  letters: '\\u01C8'\n}, {\n  base: 'M',\n  letters: '\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'\n}, {\n  base: 'N',\n  letters: '\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'\n}, {\n  base: 'NJ',\n  letters: '\\u01CA'\n}, {\n  base: 'Nj',\n  letters: '\\u01CB'\n}, {\n  base: 'O',\n  letters: '\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'\n}, {\n  base: 'OI',\n  letters: '\\u01A2'\n}, {\n  base: 'OO',\n  letters: '\\uA74E'\n}, {\n  base: 'OU',\n  letters: '\\u0222'\n}, {\n  base: 'OE',\n  letters: '\\u008C\\u0152'\n}, {\n  base: 'oe',\n  letters: '\\u009C\\u0153'\n}, {\n  base: 'P',\n  letters: '\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'\n}, {\n  base: 'Q',\n  letters: '\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'\n}, {\n  base: 'R',\n  letters: '\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'\n}, {\n  base: 'S',\n  letters: '\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'\n}, {\n  base: 'T',\n  letters: '\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'\n}, {\n  base: 'TZ',\n  letters: '\\uA728'\n}, {\n  base: 'U',\n  letters: '\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'\n}, {\n  base: 'V',\n  letters: '\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'\n}, {\n  base: 'VY',\n  letters: '\\uA760'\n}, {\n  base: 'W',\n  letters: '\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'\n}, {\n  base: 'X',\n  letters: '\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'\n}, {\n  base: 'Y',\n  letters: '\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'\n}, {\n  base: 'Z',\n  letters: '\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'\n}, {\n  base: 'a',\n  letters: '\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'\n}, {\n  base: 'aa',\n  letters: '\\uA733'\n}, {\n  base: 'ae',\n  letters: '\\u00E6\\u01FD\\u01E3'\n}, {\n  base: 'ao',\n  letters: '\\uA735'\n}, {\n  base: 'au',\n  letters: '\\uA737'\n}, {\n  base: 'av',\n  letters: '\\uA739\\uA73B'\n}, {\n  base: 'ay',\n  letters: '\\uA73D'\n}, {\n  base: 'b',\n  letters: '\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'\n}, {\n  base: 'c',\n  letters: '\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'\n}, {\n  base: 'd',\n  letters: '\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'\n}, {\n  base: 'dz',\n  letters: '\\u01F3\\u01C6'\n}, {\n  base: 'e',\n  letters: '\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'\n}, {\n  base: 'f',\n  letters: '\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'\n}, {\n  base: 'g',\n  letters: '\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'\n}, {\n  base: 'h',\n  letters: '\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'\n}, {\n  base: 'hv',\n  letters: '\\u0195'\n}, {\n  base: 'i',\n  letters: '\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'\n}, {\n  base: 'j',\n  letters: '\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'\n}, {\n  base: 'k',\n  letters: '\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'\n}, {\n  base: 'l',\n  letters: '\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'\n}, {\n  base: 'lj',\n  letters: '\\u01C9'\n}, {\n  base: 'm',\n  letters: '\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'\n}, {\n  base: 'n',\n  letters: '\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'\n}, {\n  base: 'nj',\n  letters: '\\u01CC'\n}, {\n  base: 'o',\n  letters: '\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'\n}, {\n  base: 'oi',\n  letters: '\\u01A3'\n}, {\n  base: 'ou',\n  letters: '\\u0223'\n}, {\n  base: 'oo',\n  letters: '\\uA74F'\n}, {\n  base: 'p',\n  letters: '\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'\n}, {\n  base: 'q',\n  letters: '\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'\n}, {\n  base: 'r',\n  letters: '\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'\n}, {\n  base: 's',\n  letters: '\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'\n}, {\n  base: 't',\n  letters: '\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'\n}, {\n  base: 'tz',\n  letters: '\\uA729'\n}, {\n  base: 'u',\n  letters: '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'\n}, {\n  base: 'v',\n  letters: '\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'\n}, {\n  base: 'vy',\n  letters: '\\uA761'\n}, {\n  base: 'w',\n  letters: '\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'\n}, {\n  base: 'x',\n  letters: '\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'\n}, {\n  base: 'y',\n  letters: '\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'\n}, {\n  base: 'z',\n  letters: '\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'\n}];\nconst diacriticsMap = {};\n\nfor (let i = 0; i < defaultDiacriticsRemovalap.length; i += 1) {\n  const letters = defaultDiacriticsRemovalap[i].letters;\n\n  for (let j = 0; j < letters.length; j += 1) {\n    diacriticsMap[letters[j]] = defaultDiacriticsRemovalap[i].base;\n  }\n}\n\nlet uniqueNumber = 1;\nconst Utils = {\n  uniqueNumber() {\n    uniqueNumber += 1;\n    return uniqueNumber;\n  },\n\n  id() {\n    let mask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'xxxxxxxxxx';\n    let map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0123456789abcdef';\n    const length = map.length;\n    return mask.replace(/x/g, () => map[Math.floor(Math.random() * length)]);\n  },\n\n  mdPreloaderContent: `\n    <span class=\"preloader-inner\">\n      <span class=\"preloader-inner-gap\"></span>\n      <span class=\"preloader-inner-left\">\n          <span class=\"preloader-inner-half-circle\"></span>\n      </span>\n      <span class=\"preloader-inner-right\">\n          <span class=\"preloader-inner-half-circle\"></span>\n      </span>\n    </span>\n  `.trim(),\n  iosPreloaderContent: `\n    <span class=\"preloader-inner\">\n      ${[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(() => '<span class=\"preloader-inner-line\"></span>').join('')}\n    </span>\n  `.trim(),\n  auroraPreloaderContent: `\n    <span class=\"preloader-inner\">\n      <span class=\"preloader-inner-circle\"></span>\n    </span>\n  `,\n\n  eventNameToColonCase(eventName) {\n    let hasColon;\n    return eventName.split('').map((char, index) => {\n      if (char.match(/[A-Z]/) && index !== 0 && !hasColon) {\n        hasColon = true;\n        return `:${char.toLowerCase()}`;\n      }\n\n      return char.toLowerCase();\n    }).join('');\n  },\n\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach(key => {\n      try {\n        object[key] = null;\n      } catch (e) {// no setter for object\n      }\n\n      try {\n        delete object[key];\n      } catch (e) {// something got wrong\n      }\n    });\n  },\n\n  nextTick(callback) {\n    let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return setTimeout(callback, delay);\n  },\n\n  nextFrame(callback) {\n    return Utils.requestAnimationFrame(() => {\n      Utils.requestAnimationFrame(callback);\n    });\n  },\n\n  now() {\n    return Date.now();\n  },\n\n  requestAnimationFrame(callback) {\n    return window.requestAnimationFrame(callback);\n  },\n\n  cancelAnimationFrame(id) {\n    return window.cancelAnimationFrame(id);\n  },\n\n  removeDiacritics(str) {\n    return str.replace(/[^\\u0000-\\u007E]/g, a => diacriticsMap[a] || a);\n  },\n\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param.slice(1).join('=')) || '';\n      }\n    }\n\n    return query;\n  },\n\n  getTranslate(el) {\n    let axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      } // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n\n\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n\n    return curTransform || 0;\n  },\n\n  serializeObject(obj) {\n    let parents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    if (typeof obj === 'string') return obj;\n    const resultArray = [];\n    const separator = '&';\n    let newParents;\n\n    function varName(name) {\n      if (parents.length > 0) {\n        let parentParts = '';\n\n        for (let j = 0; j < parents.length; j += 1) {\n          if (j === 0) parentParts += parents[j];else parentParts += `[${encodeURIComponent(parents[j])}]`;\n        }\n\n        return `${parentParts}[${encodeURIComponent(name)}]`;\n      }\n\n      return encodeURIComponent(name);\n    }\n\n    function varValue(value) {\n      return encodeURIComponent(value);\n    }\n\n    Object.keys(obj).forEach(prop => {\n      let toPush;\n\n      if (Array.isArray(obj[prop])) {\n        toPush = [];\n\n        for (let i = 0; i < obj[prop].length; i += 1) {\n          if (!Array.isArray(obj[prop][i]) && typeof obj[prop][i] === 'object') {\n            newParents = parents.slice();\n            newParents.push(prop);\n            newParents.push(String(i));\n            toPush.push(Utils.serializeObject(obj[prop][i], newParents));\n          } else {\n            toPush.push(`${varName(prop)}[]=${varValue(obj[prop][i])}`);\n          }\n        }\n\n        if (toPush.length > 0) resultArray.push(toPush.join(separator));\n      } else if (obj[prop] === null || obj[prop] === '') {\n        resultArray.push(`${varName(prop)}=`);\n      } else if (typeof obj[prop] === 'object') {\n        // Object, convert to named array\n        newParents = parents.slice();\n        newParents.push(prop);\n        toPush = Utils.serializeObject(obj[prop], newParents);\n        if (toPush !== '') resultArray.push(toPush);\n      } else if (typeof obj[prop] !== 'undefined' && obj[prop] !== '') {\n        // Should be string or plain value\n        resultArray.push(`${varName(prop)}=${varValue(obj[prop])}`);\n      } else if (obj[prop] === '') resultArray.push(varName(prop));\n    });\n    return resultArray.join(separator);\n  },\n\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n\n  merge() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const to = args[0];\n    args.splice(0, 1);\n    const from = args;\n\n    for (let i = 0; i < from.length; i += 1) {\n      const nextSource = args[i];\n\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n\n    return to;\n  },\n\n  extend() {\n    let deep = true;\n    let to;\n    let from;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (typeof args[0] === 'boolean') {\n      deep = args[0];\n      to = args[1];\n      args.splice(0, 2);\n      from = args;\n    } else {\n      to = args[0];\n      args.splice(0, 1);\n      from = args;\n    }\n\n    for (let i = 0; i < from.length; i += 1) {\n      const nextSource = args[i];\n\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            if (!deep) {\n              to[nextKey] = nextSource[nextKey];\n            } else if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n\n    return to;\n  },\n\n  colorHexToRgb(hex) {\n    const h = hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (m, r, g, b) => r + r + g + g + b + b);\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(h);\n    return result ? result.slice(1).map(n => parseInt(n, 16)) : null;\n  },\n\n  colorRgbToHex(r, g, b) {\n    const result = [r, g, b].map(n => {\n      const hex = n.toString(16);\n      return hex.length === 1 ? `0${hex}` : hex;\n    }).join('');\n    return `#${result}`;\n  },\n\n  colorRgbToHsl(r, g, b) {\n    r /= 255; // eslint-disable-line\n\n    g /= 255; // eslint-disable-line\n\n    b /= 255; // eslint-disable-line\n\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const d = max - min;\n    let h;\n    if (d === 0) h = 0;else if (max === r) h = (g - b) / d % 6;else if (max === g) h = (b - r) / d + 2;else if (max === b) h = (r - g) / d + 4;\n    const l = (min + max) / 2;\n    const s = d === 0 ? 0 : d / (1 - Math.abs(2 * l - 1));\n    if (h < 0) h = 360 / 60 + h;\n    return [h * 60, s, l];\n  },\n\n  colorHslToRgb(h, s, l) {\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const hp = h / 60;\n    const x = c * (1 - Math.abs(hp % 2 - 1));\n    let rgb1;\n\n    if (Number.isNaN(h) || typeof h === 'undefined') {\n      rgb1 = [0, 0, 0];\n    } else if (hp <= 1) rgb1 = [c, x, 0];else if (hp <= 2) rgb1 = [x, c, 0];else if (hp <= 3) rgb1 = [0, c, x];else if (hp <= 4) rgb1 = [0, x, c];else if (hp <= 5) rgb1 = [x, 0, c];else if (hp <= 6) rgb1 = [c, 0, x];\n\n    const m = l - c / 2;\n    return rgb1.map(n => Math.max(0, Math.min(255, Math.round(255 * (n + m)))));\n  },\n\n  colorHsbToHsl(h, s, b) {\n    const HSL = {\n      h,\n      s: 0,\n      l: 0\n    };\n    const HSB = {\n      h,\n      s,\n      b\n    };\n    HSL.l = (2 - HSB.s) * HSB.b / 2;\n    HSL.s = HSL.l && HSL.l < 1 ? HSB.s * HSB.b / (HSL.l < 0.5 ? HSL.l * 2 : 2 - HSL.l * 2) : HSL.s;\n    return [HSL.h, HSL.s, HSL.l];\n  },\n\n  colorHslToHsb(h, s, l) {\n    const HSB = {\n      h,\n      s: 0,\n      b: 0\n    };\n    const HSL = {\n      h,\n      s,\n      l\n    };\n    const t = HSL.s * (HSL.l < 0.5 ? HSL.l : 1 - HSL.l);\n    HSB.b = HSL.l + t;\n    HSB.s = HSL.l > 0 ? 2 * t / HSB.b : HSB.s;\n    return [HSB.h, HSB.s, HSB.b];\n  },\n\n  colorThemeCSSProperties() {\n    let hex;\n    let rgb;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    if (args.length === 1) {\n      hex = args[0];\n      rgb = Utils.colorHexToRgb(hex);\n    } else if (args.length === 3) {\n      rgb = args;\n      hex = Utils.colorRgbToHex(...rgb);\n    }\n\n    if (!rgb) return {};\n    const hsl = Utils.colorRgbToHsl(...rgb);\n    const hslShade = [hsl[0], hsl[1], Math.max(0, hsl[2] - 0.08)];\n    const hslTint = [hsl[0], hsl[1], Math.max(0, hsl[2] + 0.08)];\n    const shade = Utils.colorRgbToHex(...Utils.colorHslToRgb(...hslShade));\n    const tint = Utils.colorRgbToHex(...Utils.colorHslToRgb(...hslTint));\n    return {\n      '--f7-theme-color': hex,\n      '--f7-theme-color-rgb': rgb.join(', '),\n      '--f7-theme-color-shade': shade,\n      '--f7-theme-color-tint': tint\n    };\n  }\n\n};\nexport default Utils;","map":null,"metadata":{},"sourceType":"module"}