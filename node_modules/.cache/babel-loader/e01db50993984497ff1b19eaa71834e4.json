{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7List = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7List, _React$Component);\n\n  function F7List(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7List).call(this, props, context));\n    _this.__reactRefs = {};\n\n    (function () {\n      Utils.bindMethods(_assertThisInitialized(_this), ['onSortableEnable', 'onSortableDisable', 'onSortableSort', 'onTabShow', 'onTabHide', 'onSubmit']);\n    })();\n\n    return _this;\n  }\n\n  _createClass(F7List, [{\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      this.dispatchEvent('submit', event);\n    }\n  }, {\n    key: \"onSortableEnable\",\n    value: function onSortableEnable(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('sortable:enable sortableEnable');\n    }\n  }, {\n    key: \"onSortableDisable\",\n    value: function onSortableDisable(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('sortable:disable sortableDisable');\n    }\n  }, {\n    key: \"onSortableSort\",\n    value: function onSortableSort(el, sortData, listEl) {\n      if (this.eventTargetEl !== listEl) return;\n      this.dispatchEvent('sortable:sort sortableSort', sortData);\n    }\n  }, {\n    key: \"onTabShow\",\n    value: function onTabShow(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('tab:show tabShow');\n    }\n  }, {\n    key: \"onTabHide\",\n    value: function onTabHide(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('tab:hide tabHide');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          style = props.style,\n          form = props.form,\n          sortableMoveElements = props.sortableMoveElements;\n      var _self$slots = self.slots,\n          slotsList = _self$slots.list,\n          slotsDefault = _self$slots.default;\n      var rootChildrenBeforeList = [];\n      var rootChildrenAfterList = [];\n      var ulChildren = slotsList || [];\n      var flattenSlots = Utils.flattenArray(slotsDefault);\n      var wasUlChild = false;\n      flattenSlots.forEach(function (child) {\n        if (typeof child === 'undefined') return;\n        var tag;\n        {\n          tag = child.type && (child.type.displayName || child.type.name);\n\n          if (!tag && typeof child.type === 'string') {\n            tag = child.type;\n          }\n        }\n\n        if (!tag && 'react' === 'react' || tag && !(tag === 'li' || tag === 'F7ListItem' || tag === 'F7ListButton' || tag === 'F7ListInput' || tag.indexOf('list-item') >= 0 || tag.indexOf('list-button') >= 0 || tag.indexOf('list-input') >= 0 || tag.indexOf('f7-list-item') >= 0 || tag.indexOf('f7-list-button') >= 0 || tag.indexOf('f7-list-input') >= 0)) {\n          if (wasUlChild) rootChildrenAfterList.push(child);else rootChildrenBeforeList.push(child);\n        } else if (tag) {\n          wasUlChild = true;\n          ulChildren.push(child);\n        }\n      });\n      var ListTag = form ? 'form' : 'div';\n\n      if (ulChildren.length > 0) {\n        return React.createElement(ListTag, {\n          id: id,\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['el'] = __reactNode;\n          },\n          style: style,\n          className: self.classes,\n          'data-sortable-move-elements': typeof sortableMoveElements !== 'undefined' ? sortableMoveElements.toString() : undefined\n        }, self.slots['before-list'], rootChildrenBeforeList, React.createElement('ul', null, ulChildren), self.slots['after-list'], rootChildrenAfterList);\n      } else {\n        return React.createElement(ListTag, {\n          id: id,\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['el'] = __reactNode;\n          },\n          style: style,\n          className: self.classes,\n          'data-sortable-move-elements': typeof sortableMoveElements !== 'undefined' ? sortableMoveElements.toString() : undefined\n        }, self.slots['before-list'], rootChildrenBeforeList, self.slots['after-list'], rootChildrenAfterList);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      var el = self.refs.el;\n      var f7 = self.$f7;\n      if (!el || !f7) return;\n      f7.off('sortableEnable', self.onSortableEnable);\n      f7.off('sortableDisable', self.onSortableDisable);\n      f7.off('sortableSort', self.onSortableSort);\n      f7.off('tabShow', self.onTabShow);\n      f7.off('tabHide', self.onTabHide);\n      el.removeEventListener('submit', self.onSubmit);\n      self.eventTargetEl = null;\n      delete self.eventTargetEl;\n      if (!(self.virtualList && self.f7VirtualList)) return;\n      if (self.f7VirtualList.destroy) self.f7VirtualList.destroy();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var el = self.refs.el;\n      var _self$props = self.props,\n          virtualList = _self$props.virtualList,\n          virtualListParams = _self$props.virtualListParams,\n          form = _self$props.form;\n      self.$f7ready(function (f7) {\n        self.eventTargetEl = el;\n        f7.on('sortableEnable', self.onSortableEnable);\n        f7.on('sortableDisable', self.onSortableDisable);\n        f7.on('sortableSort', self.onSortableSort);\n        f7.on('tabShow', self.onTabShow);\n        f7.on('tabHide', self.onTabHide);\n\n        if (form) {\n          el.addEventListener('submit', self.onSubmit);\n        }\n\n        if (!virtualList) return;\n        var vlParams = virtualListParams || {};\n        if (!vlParams.renderItem && !vlParams.itemTemplate && !vlParams.renderExternal) return;\n        self.f7VirtualList = f7.virtualList.create(Utils.extend({\n          el: el,\n          on: {\n            itemBeforeInsert: function itemBeforeInsert(itemEl, item) {\n              var vl = this;\n              self.dispatchEvent('virtual:itembeforeinsert virtualItemBeforeInsert', vl, itemEl, item);\n            },\n            beforeClear: function beforeClear(fragment) {\n              var vl = this;\n              self.dispatchEvent('virtual:beforeclear virtualBeforeClear', vl, fragment);\n            },\n            itemsBeforeInsert: function itemsBeforeInsert(fragment) {\n              var vl = this;\n              self.dispatchEvent('virtual:itemsbeforeinsert virtualItemsBeforeInsert', vl, fragment);\n            },\n            itemsAfterInsert: function itemsAfterInsert(fragment) {\n              var vl = this;\n              self.dispatchEvent('virtual:itemsafterinsert virtualItemsAfterInsert', vl, fragment);\n            }\n          }\n        }, vlParams));\n      });\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      var self = this;\n      var props = self.props;\n      var inset = props.inset,\n          xsmallInset = props.xsmallInset,\n          smallInset = props.smallInset,\n          mediumInset = props.mediumInset,\n          largeInset = props.largeInset,\n          xlargeInset = props.xlargeInset,\n          mediaList = props.mediaList,\n          simpleList = props.simpleList,\n          linksList = props.linksList,\n          sortable = props.sortable,\n          sortableTapHold = props.sortableTapHold,\n          sortableEnabled = props.sortableEnabled,\n          accordionList = props.accordionList,\n          contactsList = props.contactsList,\n          virtualList = props.virtualList,\n          tab = props.tab,\n          tabActive = props.tabActive,\n          noHairlines = props.noHairlines,\n          noHairlinesIos = props.noHairlinesIos,\n          noHairlinesMd = props.noHairlinesMd,\n          noHairlinesAurora = props.noHairlinesAurora,\n          noHairlinesBetween = props.noHairlinesBetween,\n          noHairlinesBetweenIos = props.noHairlinesBetweenIos,\n          noHairlinesBetweenMd = props.noHairlinesBetweenMd,\n          noHairlinesBetweenAurora = props.noHairlinesBetweenAurora,\n          formStoreData = props.formStoreData,\n          inlineLabels = props.inlineLabels,\n          className = props.className,\n          noChevron = props.noChevron,\n          chevronCenter = props.chevronCenter;\n      return Utils.classNames(className, 'list', {\n        inset: inset,\n        'xsmall-inset': xsmallInset,\n        'small-inset': smallInset,\n        'medium-inset': mediumInset,\n        'large-inset': largeInset,\n        'xlarge-inset': xlargeInset,\n        'media-list': mediaList,\n        'simple-list': simpleList,\n        'links-list': linksList,\n        sortable: sortable,\n        'sortable-tap-hold': sortableTapHold,\n        'sortable-enabled': sortableEnabled,\n        'accordion-list': accordionList,\n        'contacts-list': contactsList,\n        'virtual-list': virtualList,\n        tab: tab,\n        'tab-active': tabActive,\n        'no-hairlines': noHairlines,\n        'no-hairlines-md': noHairlinesMd,\n        'no-hairlines-ios': noHairlinesIos,\n        'no-hairlines-aurora': noHairlinesAurora,\n        'no-hairlines-between': noHairlinesBetween,\n        'no-hairlines-between-md': noHairlinesBetweenMd,\n        'no-hairlines-between-ios': noHairlinesBetweenIos,\n        'no-hairlines-between-aurora': noHairlinesBetweenAurora,\n        'form-store-data': formStoreData,\n        'inline-labels': inlineLabels,\n        'no-chevron': noChevron,\n        'chevron-center': chevronCenter\n      }, Mixins.colorClasses(props));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7List;\n}(React.Component);\n\n__reactComponentSetProps(F7List, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  inset: Boolean,\n  xsmallInset: Boolean,\n  smallInset: Boolean,\n  mediumInset: Boolean,\n  largeInset: Boolean,\n  xlargeInset: Boolean,\n  mediaList: Boolean,\n  sortable: Boolean,\n  sortableTapHold: Boolean,\n  sortableEnabled: Boolean,\n  sortableMoveElements: {\n    type: Boolean,\n    default: undefined\n  },\n  accordionList: Boolean,\n  contactsList: Boolean,\n  simpleList: Boolean,\n  linksList: Boolean,\n  noHairlines: Boolean,\n  noHairlinesBetween: Boolean,\n  noHairlinesMd: Boolean,\n  noHairlinesBetweenMd: Boolean,\n  noHairlinesIos: Boolean,\n  noHairlinesBetweenIos: Boolean,\n  noHairlinesAurora: Boolean,\n  noHairlinesBetweenAurora: Boolean,\n  noChevron: Boolean,\n  chevronCenter: Boolean,\n  tab: Boolean,\n  tabActive: Boolean,\n  form: Boolean,\n  formStoreData: Boolean,\n  inlineLabels: Boolean,\n  virtualList: Boolean,\n  virtualListParams: Object\n}, Mixins.colorProps));\n\nF7List.displayName = 'f7-list';\nexport default F7List;","map":null,"metadata":{},"sourceType":"module"}