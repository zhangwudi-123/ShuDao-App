{"ast":null,"code":"import React from 'react';\nimport { InternalToast } from './toast';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { renderImperatively } from '../../utils/render-imperatively';\nlet currentHandler = null;\nlet currentTimeout = null;\nconst defaultProps = {\n  duration: 2000,\n  position: 'center',\n  maskClickable: true\n};\n\nconst ToastInner = props => React.createElement(InternalToast, Object.assign({}, props));\n\nexport function show(p) {\n  const props = mergeProps(defaultProps, typeof p === 'string' ? {\n    content: p\n  } : p);\n  const element = React.createElement(ToastInner, Object.assign({}, props, {\n    onClose: () => {\n      currentHandler = null;\n    }\n  }));\n\n  if (currentHandler) {\n    currentHandler.replace(element);\n  } else {\n    currentHandler = renderImperatively(element);\n  }\n\n  if (currentTimeout) {\n    window.clearTimeout(currentTimeout);\n  }\n\n  if (props.duration !== 0) {\n    currentTimeout = window.setTimeout(() => {\n      clear();\n    }, props.duration);\n  }\n\n  return currentHandler;\n}\nexport function clear() {\n  currentHandler === null || currentHandler === void 0 ? void 0 : currentHandler.close();\n  currentHandler = null;\n}\nexport function config(val) {\n  if (val.duration !== undefined) {\n    defaultProps.duration = val.duration;\n  }\n\n  if (val.position !== undefined) {\n    defaultProps.position = val.position;\n  }\n\n  if (val.maskClickable !== undefined) {\n    defaultProps.maskClickable = val.maskClickable;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}