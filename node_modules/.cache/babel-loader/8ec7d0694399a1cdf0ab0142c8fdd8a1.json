{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7PageContent from './page-content';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Page = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7Page, _React$Component);\n\n  function F7Page(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Page).call(this, props, context));\n    _this.__reactRefs = {};\n\n    _this.state = function () {\n      return {\n        hasSubnavbar: false,\n        hasNavbarLarge: false,\n        hasNavbarLargeCollapsed: false,\n        hasCardExpandableOpened: false,\n        routerPositionClass: '',\n        routerForceUnstack: false,\n        routerPageRole: null,\n        routerPageRoleDetailRoot: false,\n        routerPageMasterStack: false\n      };\n    }();\n\n    (function () {\n      Utils.bindMethods(_assertThisInitialized(_this), ['onPtrPullStart', 'onPtrPullMove', 'onPtrPullEnd', 'onPtrRefresh', 'onPtrDone', 'onInfinite', 'onPageMounted', 'onPageInit', 'onPageReinit', 'onPageBeforeIn', 'onPageBeforeOut', 'onPageAfterOut', 'onPageAfterIn', 'onPageBeforeRemove', 'onPageStack', 'onPageUnstack', 'onPagePosition', 'onPageRole', 'onPageMasterStack', 'onPageMasterUnstack', 'onPageNavbarLargeCollapsed', 'onPageNavbarLargeExpanded', 'onCardOpened', 'onCardClose']);\n    })();\n\n    return _this;\n  }\n\n  _createClass(F7Page, [{\n    key: \"onPtrPullStart\",\n    value: function onPtrPullStart() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.dispatchEvent.apply(this, ['ptr:pullstart ptrPullStart'].concat(args));\n    }\n  }, {\n    key: \"onPtrPullMove\",\n    value: function onPtrPullMove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this.dispatchEvent.apply(this, ['ptr:pullmove ptrPullMove'].concat(args));\n    }\n  }, {\n    key: \"onPtrPullEnd\",\n    value: function onPtrPullEnd() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this.dispatchEvent.apply(this, ['ptr:pullend ptrPullEnd'].concat(args));\n    }\n  }, {\n    key: \"onPtrRefresh\",\n    value: function onPtrRefresh() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this.dispatchEvent.apply(this, ['ptr:refresh ptrRefresh'].concat(args));\n    }\n  }, {\n    key: \"onPtrDone\",\n    value: function onPtrDone() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this.dispatchEvent.apply(this, ['ptr:done ptrDone'].concat(args));\n    }\n  }, {\n    key: \"onInfinite\",\n    value: function onInfinite() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this.dispatchEvent.apply(this, ['infinite'].concat(args));\n    }\n  }, {\n    key: \"onPageMounted\",\n    value: function onPageMounted(page) {\n      if (this.eventTargetEl !== page.el) return;\n      this.dispatchEvent('page:mounted pageMounted', page);\n    }\n  }, {\n    key: \"onPageInit\",\n    value: function onPageInit(page) {\n      if (this.eventTargetEl !== page.el) return;\n      var _this$props = this.props,\n          withSubnavbar = _this$props.withSubnavbar,\n          subnavbar = _this$props.subnavbar,\n          withNavbarLarge = _this$props.withNavbarLarge,\n          navbarLarge = _this$props.navbarLarge;\n\n      if (typeof withSubnavbar === 'undefined' && typeof subnavbar === 'undefined') {\n        if (page.$navbarEl && page.$navbarEl.length && page.$navbarEl.find('.subnavbar').length || page.$el.children('.navbar').find('.subnavbar').length) {\n          this.setState({\n            hasSubnavbar: true\n          });\n        }\n      }\n\n      if (typeof withNavbarLarge === 'undefined' && typeof navbarLarge === 'undefined') {\n        if (page.$navbarEl && page.$navbarEl.hasClass('navbar-large')) {\n          this.setState({\n            hasNavbarLarge: true\n          });\n        }\n      }\n\n      this.dispatchEvent('page:init pageInit', page);\n    }\n  }, {\n    key: \"onPageReinit\",\n    value: function onPageReinit(page) {\n      if (this.eventTargetEl !== page.el) return;\n      this.dispatchEvent('page:reinit pageReinit', page);\n    }\n  }, {\n    key: \"onPageBeforeIn\",\n    value: function onPageBeforeIn(page) {\n      if (this.eventTargetEl !== page.el) return;\n\n      if (page.from === 'next') {\n        this.setState({\n          routerPositionClass: 'page-next'\n        });\n      }\n\n      if (page.from === 'previous') {\n        this.setState({\n          routerPositionClass: 'page-previous'\n        });\n      }\n\n      this.dispatchEvent('page:beforein pageBeforeIn', page);\n    }\n  }, {\n    key: \"onPageBeforeOut\",\n    value: function onPageBeforeOut(page) {\n      if (this.eventTargetEl !== page.el) return;\n      this.dispatchEvent('page:beforeout pageBeforeOut', page);\n    }\n  }, {\n    key: \"onPageAfterOut\",\n    value: function onPageAfterOut(page) {\n      if (this.eventTargetEl !== page.el) return;\n\n      if (page.to === 'next') {\n        this.setState({\n          routerPositionClass: 'page-next'\n        });\n      }\n\n      if (page.to === 'previous') {\n        this.setState({\n          routerPositionClass: 'page-previous'\n        });\n      }\n\n      this.dispatchEvent('page:afterout pageAfterOut', page);\n    }\n  }, {\n    key: \"onPageAfterIn\",\n    value: function onPageAfterIn(page) {\n      if (this.eventTargetEl !== page.el) return;\n      this.setState({\n        routerPositionClass: 'page-current'\n      });\n      this.dispatchEvent('page:afterin pageAfterIn', page);\n    }\n  }, {\n    key: \"onPageBeforeRemove\",\n    value: function onPageBeforeRemove(page) {\n      if (this.eventTargetEl !== page.el) return;\n      this.dispatchEvent('page:beforeremove pageBeforeRemove', page);\n    }\n  }, {\n    key: \"onPageStack\",\n    value: function onPageStack(pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        routerForceUnstack: false\n      });\n    }\n  }, {\n    key: \"onPageUnstack\",\n    value: function onPageUnstack(pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        routerForceUnstack: true\n      });\n    }\n  }, {\n    key: \"onPagePosition\",\n    value: function onPagePosition(pageEl, position) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        routerPositionClass: \"page-\".concat(position)\n      });\n    }\n  }, {\n    key: \"onPageRole\",\n    value: function onPageRole(pageEl, rolesData) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        routerPageRole: rolesData.role,\n        routerPageRoleDetailRoot: rolesData.detailRoot\n      });\n    }\n  }, {\n    key: \"onPageMasterStack\",\n    value: function onPageMasterStack(pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        routerPageMasterStack: true\n      });\n    }\n  }, {\n    key: \"onPageMasterUnstack\",\n    value: function onPageMasterUnstack(pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        routerPageMasterStack: false\n      });\n    }\n  }, {\n    key: \"onPageNavbarLargeCollapsed\",\n    value: function onPageNavbarLargeCollapsed(pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        hasNavbarLargeCollapsed: true\n      });\n    }\n  }, {\n    key: \"onPageNavbarLargeExpanded\",\n    value: function onPageNavbarLargeExpanded(pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        hasNavbarLargeCollapsed: false\n      });\n    }\n  }, {\n    key: \"onCardOpened\",\n    value: function onCardOpened(cardEl, pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        hasCardExpandableOpened: true\n      });\n    }\n  }, {\n    key: \"onCardClose\",\n    value: function onCardClose(cardEl, pageEl) {\n      if (this.eventTargetEl !== pageEl) return;\n      this.setState({\n        hasCardExpandableOpened: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          style = props.style,\n          name = props.name,\n          pageContent = props.pageContent,\n          messagesContent = props.messagesContent,\n          ptr = props.ptr,\n          ptrDistance = props.ptrDistance,\n          ptrPreloader = props.ptrPreloader,\n          ptrBottom = props.ptrBottom,\n          ptrMousewheel = props.ptrMousewheel,\n          infinite = props.infinite,\n          infiniteDistance = props.infiniteDistance,\n          infinitePreloader = props.infinitePreloader,\n          infiniteTop = props.infiniteTop,\n          hideBarsOnScroll = props.hideBarsOnScroll,\n          hideNavbarOnScroll = props.hideNavbarOnScroll,\n          hideToolbarOnScroll = props.hideToolbarOnScroll,\n          loginScreen = props.loginScreen,\n          className = props.className,\n          stacked = props.stacked,\n          tabs = props.tabs,\n          subnavbar = props.subnavbar,\n          withSubnavbar = props.withSubnavbar,\n          navbarLarge = props.navbarLarge,\n          withNavbarLarge = props.withNavbarLarge,\n          noNavbar = props.noNavbar,\n          noToolbar = props.noToolbar,\n          noSwipeback = props.noSwipeback;\n      var fixedList = [];\n      var staticList = [];\n      var _self$slots = self.slots,\n          slotsStatic = _self$slots.static,\n          slotsFixed = _self$slots.fixed,\n          slotsDefault = _self$slots.default;\n      var fixedTags;\n      fixedTags = 'navbar toolbar tabbar subnavbar searchbar messagebar fab list-index'.split(' ').map(function (tagName) {\n        return \"f7-\".concat(tagName);\n      });\n      var hasSubnavbar;\n      var hasMessages;\n      var hasNavbarLarge;\n      hasMessages = messagesContent;\n\n      if (slotsDefault) {\n        slotsDefault.forEach(function (child) {\n          if (typeof child === 'undefined') return;\n          var isFixedTag = false;\n          {\n            var tag = child.type && (child.type.displayName || child.type.name);\n\n            if (!tag) {\n              if (pageContent) staticList.push(child);\n              return;\n            }\n\n            if (tag === 'F7Subnavbar' || tag === 'f7-subnavbar') hasSubnavbar = true;\n\n            if (tag === 'F7Navbar' || tag === 'f7-navbar') {\n              if (child.props && child.props.large) hasNavbarLarge = true;\n            }\n\n            if (typeof hasMessages === 'undefined' && (tag === 'F7Messages' || tag === 'f7-messages')) hasMessages = true;\n\n            if (fixedTags.indexOf(tag) >= 0) {\n              isFixedTag = true;\n            }\n          }\n\n          if (pageContent) {\n            if (isFixedTag) fixedList.push(child);else staticList.push(child);\n          }\n        });\n      }\n\n      var forceSubnavbar = typeof subnavbar === 'undefined' && typeof withSubnavbar === 'undefined' ? hasSubnavbar || this.state.hasSubnavbar : false;\n      var forceNavbarLarge = typeof navbarLarge === 'undefined' && typeof withNavbarLarge === 'undefined' ? hasNavbarLarge || this.state.hasNavbarLarge : false;\n      var classes = Utils.classNames(className, 'page', this.state.routerPositionClass, {\n        stacked: stacked && !this.state.routerForceUnstack,\n        tabs: tabs,\n        'page-with-subnavbar': subnavbar || withSubnavbar || forceSubnavbar,\n        'page-with-navbar-large': navbarLarge || withNavbarLarge || forceNavbarLarge,\n        'no-navbar': noNavbar,\n        'no-toolbar': noToolbar,\n        'no-swipeback': noSwipeback,\n        'page-master': this.state.routerPageRole === 'master',\n        'page-master-detail': this.state.routerPageRole === 'detail',\n        'page-master-detail-root': this.state.routerPageRoleDetailRoot === true,\n        'page-master-stacked': this.state.routerPageMasterStack === true,\n        'page-with-navbar-large-collapsed': this.state.hasNavbarLargeCollapsed === true,\n        'page-with-card-opened': this.state.hasCardExpandableOpened === true,\n        'login-screen-page': loginScreen\n      }, Mixins.colorClasses(props));\n\n      if (!pageContent) {\n        return React.createElement('div', {\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['el'] = __reactNode;\n          },\n          id: id,\n          style: style,\n          className: classes,\n          'data-name': name\n        }, slotsFixed, slotsStatic, slotsDefault);\n      }\n\n      var pageContentEl = React.createElement(F7PageContent, {\n        ptr: ptr,\n        ptrDistance: ptrDistance,\n        ptrPreloader: ptrPreloader,\n        ptrBottom: ptrBottom,\n        ptrMousewheel: ptrMousewheel,\n        infinite: infinite,\n        infiniteTop: infiniteTop,\n        infiniteDistance: infiniteDistance,\n        infinitePreloader: infinitePreloader,\n        hideBarsOnScroll: hideBarsOnScroll,\n        hideNavbarOnScroll: hideNavbarOnScroll,\n        hideToolbarOnScroll: hideToolbarOnScroll,\n        messagesContent: messagesContent || hasMessages,\n        loginScreen: loginScreen,\n        onPtrPullStart: self.onPtrPullStart,\n        onPtrPullMove: self.onPtrPullMove,\n        onPtrPullEnd: self.onPtrPullEnd,\n        onPtrRefresh: self.onPtrRefresh,\n        onPtrDone: self.onPtrDone,\n        onInfinite: self.onInfinite\n      }, slotsStatic, staticList);\n      return React.createElement('div', {\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        id: id,\n        style: style,\n        className: classes,\n        'data-name': name\n      }, fixedList, slotsFixed, pageContentEl);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      if (!self.$f7) return;\n      var f7 = self.$f7;\n      f7.off('pageMounted', self.onPageMounted);\n      f7.off('pageInit', self.onPageInit);\n      f7.off('pageReinit', self.onPageReinit);\n      f7.off('pageBeforeIn', self.onPageBeforeIn);\n      f7.off('pageBeforeOut', self.onPageBeforeOut);\n      f7.off('pageAfterOut', self.onPageAfterOut);\n      f7.off('pageAfterIn', self.onPageAfterIn);\n      f7.off('pageBeforeRemove', self.onPageBeforeRemove);\n      f7.off('pageStack', self.onPageStack);\n      f7.off('pageUnstack', self.onPageUnstack);\n      f7.off('pagePosition', self.onPagePosition);\n      f7.off('pageRole', self.onPageRole);\n      f7.off('pageMasterStack', self.onPageMasterStack);\n      f7.off('pageMasterUnstack', self.onPageMasterUnstack);\n      f7.off('pageNavbarLargeCollapsed', self.onPageNavbarLargeCollapsed);\n      f7.off('pageNavbarLargeExpanded', self.onPageNavbarLargeExpanded);\n      f7.off('cardOpened', self.onCardOpened);\n      f7.off('cardClose', self.onCardClose);\n      self.eventTargetEl = null;\n      delete self.eventTargetEl;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var el = self.refs.el;\n      self.$f7ready(function (f7) {\n        self.eventTargetEl = el;\n        f7.on('pageMounted', self.onPageMounted);\n        f7.on('pageInit', self.onPageInit);\n        f7.on('pageReinit', self.onPageReinit);\n        f7.on('pageBeforeIn', self.onPageBeforeIn);\n        f7.on('pageBeforeOut', self.onPageBeforeOut);\n        f7.on('pageAfterOut', self.onPageAfterOut);\n        f7.on('pageAfterIn', self.onPageAfterIn);\n        f7.on('pageBeforeRemove', self.onPageBeforeRemove);\n        f7.on('pageStack', self.onPageStack);\n        f7.on('pageUnstack', self.onPageUnstack);\n        f7.on('pagePosition', self.onPagePosition);\n        f7.on('pageRole', self.onPageRole);\n        f7.on('pageMasterStack', self.onPageMasterStack);\n        f7.on('pageMasterUnstack', self.onPageMasterUnstack);\n        f7.on('pageNavbarLargeCollapsed', self.onPageNavbarLargeCollapsed);\n        f7.on('pageNavbarLargeExpanded', self.onPageNavbarLargeExpanded);\n        f7.on('cardOpened', self.onCardOpened);\n        f7.on('cardClose', self.onCardClose);\n      });\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n        args[_key7 - 1] = arguments[_key7];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Page;\n}(React.Component);\n\n__reactComponentSetProps(F7Page, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  name: String,\n  stacked: Boolean,\n  withSubnavbar: {\n    type: Boolean,\n    default: undefined\n  },\n  subnavbar: {\n    type: Boolean,\n    default: undefined\n  },\n  withNavbarLarge: {\n    type: Boolean,\n    default: undefined\n  },\n  navbarLarge: {\n    type: Boolean,\n    default: undefined\n  },\n  noNavbar: Boolean,\n  noToolbar: Boolean,\n  tabs: Boolean,\n  pageContent: {\n    type: Boolean,\n    default: true\n  },\n  noSwipeback: Boolean,\n  ptr: Boolean,\n  ptrDistance: Number,\n  ptrPreloader: {\n    type: Boolean,\n    default: true\n  },\n  ptrBottom: Boolean,\n  ptrMousewheel: Boolean,\n  infinite: Boolean,\n  infiniteTop: Boolean,\n  infiniteDistance: Number,\n  infinitePreloader: {\n    type: Boolean,\n    default: true\n  },\n  hideBarsOnScroll: Boolean,\n  hideNavbarOnScroll: Boolean,\n  hideToolbarOnScroll: Boolean,\n  messagesContent: Boolean,\n  loginScreen: Boolean\n}, Mixins.colorProps));\n\nF7Page.displayName = 'f7-page';\nexport default F7Page;","map":null,"metadata":{},"sourceType":"module"}