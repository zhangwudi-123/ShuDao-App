{"ast":null,"code":"import Utils from '../../utils/utils';\nexport default function (direction, route, options) {\n  const router = this;\n  const redirect = route.route.redirect;\n\n  if (options.initial && router.params.pushState) {\n    options.replaceState = true; // eslint-disable-line\n\n    options.history = true; // eslint-disable-line\n  }\n\n  function redirectResolve(redirectUrl) {\n    let redirectOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    router.allowPageChange = true;\n    router[direction](redirectUrl, Utils.extend({}, options, redirectOptions));\n  }\n\n  function redirectReject() {\n    router.allowPageChange = true;\n  }\n\n  if (typeof redirect === 'function') {\n    router.allowPageChange = false;\n    const redirectUrl = redirect.call(router, route, redirectResolve, redirectReject);\n\n    if (redirectUrl && typeof redirectUrl === 'string') {\n      router.allowPageChange = true;\n      return router[direction](redirectUrl, options);\n    }\n\n    return router;\n  }\n\n  return router[direction](redirect, options);\n}","map":null,"metadata":{},"sourceType":"module"}