{"ast":null,"code":"import React, { memo, useContext } from 'react';\nimport { FieldContext, useWatch } from 'rc-field-form';\nimport { useUpdate } from 'ahooks';\nimport { useIsomorphicUpdateLayoutEffect } from '../../utils/use-isomorphic-update-layout-effect';\nexport const FormSubscribe = props => {\n  const update = useUpdate();\n  const form = useContext(FieldContext);\n  const value = form.getFieldsValue(props.to); // Memo to avoid useless render\n\n  const childNode = React.useMemo(() => props.children(value, form), [JSON.stringify(value)]);\n  return React.createElement(React.Fragment, null, childNode, props.to.map(namePath => React.createElement(Watcher, {\n    key: namePath.toString(),\n    form: form,\n    namePath: namePath,\n    onChange: update\n  })));\n};\nexport const Watcher = memo(props => {\n  const value = useWatch(props.namePath, props.form);\n  useIsomorphicUpdateLayoutEffect(() => {\n    props.onChange();\n  }, [value]);\n  return null;\n});","map":null,"metadata":{},"sourceType":"module"}