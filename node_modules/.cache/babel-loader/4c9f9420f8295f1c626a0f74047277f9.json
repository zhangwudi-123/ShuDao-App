{"ast":null,"code":"// import React, { useEffect, useMemo, useRef, useState } from 'react';\n// import { Toolbar, Link, Tabs, Tab, Block, SkeletonBlock, Page, Navbar, NavLeft, NavTitle, ListInput, List, Subnavbar, Searchbar, ListItem, PageContent, Button, Sheet, Popup, Input } from '@hvisions/f-ui';\n// import styles from './style.scss';\n// import backIcon from '~/pages/WarehousinManage/img/backIcon.png';\n// import { i18n, page } from '@hvisions/toolkit';\n// import { onToast, createDialog } from '~/util/home';\n// import useDebounce from '~/Hook/useDebounce';\n// import RawMaterialWarehousingApi from '~/api/RawMaterialWarehousing';\n// import { isEmpty } from 'lodash';\n// import CardInfo from './cardInfo';\n// import { Skeleton, Empty } from '~/components';\n// const getFormattedMsg = i18n.getFormattedMsg;\n// const RawMaterialWarehousing = ({ f7router, moduleList, ...props }) => {\n//   const [tabKey, setTabKey] = useState(0);\n//   const [state, setState] = useState({\n//     0: '新建', 1: '称重中', 2: '已完成'\n//   });\n//   const countRef = useRef(10);\n//   const [loading, setLoading] = useState(false);\n//   const [list, setList] = useState([]);\n//   const [total, setTotal] = useState(0);\n//   const [selectValue, setSelectValue] = useState('');\n//   const debounceSelectValue = useDebounce(selectValue, 500);\n//   const [showPreloader, setShowPreloader] = useState(false);\n//   const [allowInfinite, setAllowInfinite] = useState(true);\n//   const [ptrPreloader, setPtrPreloader] = useState(false);\n//   useEffect(() => {\n//     const load = async () => {\n//       await loadData(debounceSelectValue);\n//     };\n//     load();\n//   }, [tabKey, debounceSelectValue]);\n//   const loadData = async keyWord => {\n//     setLoading(true);\n//     const searchData = {\n//       // purchaseReceiptNumber: keyWord,\n//       pageSize: countRef.current,\n//       state: tabKey,\n//     };\n//     await RawMaterialWarehousingApi\n//       .getByQuery(searchData)\n//       .then(res => {\n//         console.log(res,'res');\n//         setList(res.content);\n//         setTotal(res.totalElements);\n//       })\n//       .catch(err => {\n//         onToast(err.message, styles.toastError);\n//       });\n//     setLoading(false);\n//   };\n//   const loadMore = async () => {\n//     if (!allowInfinite) return;\n//     setShowPreloader(true);\n//     if (countRef.current >= total) {\n//       setShowPreloader(false);\n//       return;\n//     }\n//     setAllowInfinite(false);\n//     countRef.current = countRef.current + 10;\n//     await loadData(selectValue);\n//     await setAllowInfinite(true);\n//   };\n//   const handleAutomatic = ()=>{\n//     createDialog(\n//       '确认自动下架托盘?',\n//       '',\n//       function() {\n//         try {\n//           onToast('自动下架成功', styles.toastError);\n//           // console.log('11111111111111');\n//         } catch (error) {\n//           console.log('error',error);\n//           onToast('自动下架失败', styles.toastError);\n//         }\n//       }\n//     );\n//   }\n//   const onHandleRefresh = async done => {\n//     await setPtrPreloader(true);\n//     await loadData(selectValue);\n//     await setPtrPreloader(false);\n//     await done();\n//   };\n//   const handleManual = ()=>{\n//   }\n//   const handleBinding = ()=>{\n//   }\n//   const handleWeighing = ()=>{\n//   }\n//   const handleWarehousing = ()=>{\n//   }\n//   const handleDelete = ()=>{\n//   }\n//   const renderCardList = () =>\n//   !loading ? (\n//     !isEmpty(list) ? (\n//       list.map(value => (\n//         <CardInfo\n//           key={value.id}\n//           item={value}\n//           loadData={loadData}\n//           f7router={f7router}\n//           handleDelete={handleDelete}\n//         />\n//       ))\n//     ) : (\n//       <Empty />\n//     )\n//   ) : (\n//     <Skeleton />\n//   );\n//   return (\n//     <Page pageContent={false}>\n//       <Navbar>\n//         <NavLeft>\n//           <a onClick={() => f7router.back()} className=\"ne-navleft\">\n//             <img alt=\"\" style={{ height: 24 }} src={backIcon} />\n//           </a>\n//         </NavLeft>\n//         <NavTitle>原材料收料单</NavTitle>\n//       </Navbar>\n//       <Toolbar tabbar top noHairline className=\"ne-top-tab\">\n//         <Link tabLink=\"#tab-1\" onClick={() => setTabKey(0)} tabLinkActive>\n//           新建\n//         </Link>\n//         <Link tabLink=\"#tab-2\" onClick={() => setTabKey(1)}>\n//           称重中\n//         </Link>\n//         <Link tabLink=\"#tab-3\" onClick={() => setTabKey(2)}>\n//           已完成\n//         </Link>\n//       </Toolbar>\n//       <PageContent\n//         infinite\n//         infiniteDistance={50}\n//         infinitePreloader={showPreloader}\n//         onInfinite={loadMore}\n//         ptrPreloader={ptrPreloader}\n//         ptr\n//         onPtrRefresh={onHandleRefresh}\n//         onPtrPullStart={() => {\n//           setPtrPreloader(true);\n//         }}\n//       >\n//         <div style={{ padding: '0 16px' }} className={styles.tabContainer}>\n//           <Tabs animated>\n//             <Tab\n//               id=\"tab-1\"\n//               className={`${styles.content} page-content`}\n//               style={{ paddingTop: '0' }}\n//               tabActive\n//             >\n//               {renderCardList()}\n//             </Tab>\n//             <Tab\n//               id=\"tab-2\"\n//               className={`${styles.content} page-content`}\n//               style={{ paddingTop: '0' }}\n//             >\n//               {renderCardList()}\n//             </Tab>\n//             <Tab\n//               id=\"tab-3\"\n//               className={`${styles.content} page-content`}\n//               style={{ paddingTop: '0' }}\n//             >\n//               {renderCardList()}\n//             </Tab>\n//           </Tabs>\n//         </div>\n//       </PageContent>\n//       <div className={styles['detail-bottom']}>\n//         {tabKey == 0 && <Button className={styles['bottom-btn-confirm']}  onClick={() => handleAutomatic()} >\n//           {getFormattedMsg('RawMaterialWarehousing.button.automatic')}\n//         </Button>}\n//         {tabKey == 0 && <Button className={styles['bottom-btn-confirm']}  onClick={() => handleManual()} >\n//           {getFormattedMsg('RawMaterialWarehousing.button.manual')}\n//         </Button>}\n//         {tabKey == 0 && <Button className={styles['bottom-btn-confirm']}  onClick={() => handleBinding()}>\n//           {getFormattedMsg('RawMaterialWarehousing.button.binding')}\n//         </Button>}\n//         {tabKey == 1 && <Button className={styles['bottom-btn-one']}  onClick={() => handleWeighing()} >\n//           {getFormattedMsg('RawMaterialWarehousing.button.weighing')}\n//         </Button>}\n//         {tabKey == 2 && <Button className={styles['bottom-btn-one']}  onClick={() => handleWarehousing()} >\n//           {getFormattedMsg('RawMaterialWarehousing.button.warehousing')}\n//         </Button>}\n//       </div>\n//     </Page>\n//   );\n// };\n// export default RawMaterialWarehousing;","map":{"version":3,"names":[],"sources":["F:/project/vsCode/bc-app/src/pages/RawMaterialWarehousing/index.js"],"sourcesContent":["// import React, { useEffect, useMemo, useRef, useState } from 'react';\r\n// import { Toolbar, Link, Tabs, Tab, Block, SkeletonBlock, Page, Navbar, NavLeft, NavTitle, ListInput, List, Subnavbar, Searchbar, ListItem, PageContent, Button, Sheet, Popup, Input } from '@hvisions/f-ui';\r\n// import styles from './style.scss';\r\n// import backIcon from '~/pages/WarehousinManage/img/backIcon.png';\r\n// import { i18n, page } from '@hvisions/toolkit';\r\n// import { onToast, createDialog } from '~/util/home';\r\n// import useDebounce from '~/Hook/useDebounce';\r\n// import RawMaterialWarehousingApi from '~/api/RawMaterialWarehousing';\r\n// import { isEmpty } from 'lodash';\r\n// import CardInfo from './cardInfo';\r\n// import { Skeleton, Empty } from '~/components';\r\n\r\n// const getFormattedMsg = i18n.getFormattedMsg;\r\n\r\n// const RawMaterialWarehousing = ({ f7router, moduleList, ...props }) => {\r\n//   const [tabKey, setTabKey] = useState(0);\r\n//   const [state, setState] = useState({\r\n//     0: '新建', 1: '称重中', 2: '已完成'\r\n//   });\r\n//   const countRef = useRef(10);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [list, setList] = useState([]);\r\n//   const [total, setTotal] = useState(0);\r\n//   const [selectValue, setSelectValue] = useState('');\r\n//   const debounceSelectValue = useDebounce(selectValue, 500);\r\n//   const [showPreloader, setShowPreloader] = useState(false);\r\n//   const [allowInfinite, setAllowInfinite] = useState(true);\r\n//   const [ptrPreloader, setPtrPreloader] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const load = async () => {\r\n//       await loadData(debounceSelectValue);\r\n//     };\r\n//     load();\r\n//   }, [tabKey, debounceSelectValue]);\r\n\r\n//   const loadData = async keyWord => {\r\n//     setLoading(true);\r\n//     const searchData = {\r\n//       // purchaseReceiptNumber: keyWord,\r\n//       pageSize: countRef.current,\r\n//       state: tabKey,\r\n//     };\r\n//     await RawMaterialWarehousingApi\r\n//       .getByQuery(searchData)\r\n//       .then(res => {\r\n//         console.log(res,'res');\r\n//         setList(res.content);\r\n//         setTotal(res.totalElements);\r\n//       })\r\n//       .catch(err => {\r\n//         onToast(err.message, styles.toastError);\r\n//       });\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   const loadMore = async () => {\r\n//     if (!allowInfinite) return;\r\n//     setShowPreloader(true);\r\n//     if (countRef.current >= total) {\r\n//       setShowPreloader(false);\r\n//       return;\r\n//     }\r\n//     setAllowInfinite(false);\r\n//     countRef.current = countRef.current + 10;\r\n//     await loadData(selectValue);\r\n//     await setAllowInfinite(true);\r\n//   };\r\n\r\n//   const handleAutomatic = ()=>{\r\n//     createDialog(\r\n//       '确认自动下架托盘?',\r\n//       '',\r\n//       function() {\r\n//         try {\r\n//           onToast('自动下架成功', styles.toastError);\r\n//           // console.log('11111111111111');\r\n//         } catch (error) {\r\n//           console.log('error',error);\r\n//           onToast('自动下架失败', styles.toastError);\r\n//         }\r\n//       }\r\n//     );\r\n//   }\r\n\r\n//   const onHandleRefresh = async done => {\r\n//     await setPtrPreloader(true);\r\n//     await loadData(selectValue);\r\n//     await setPtrPreloader(false);\r\n//     await done();\r\n//   };\r\n\r\n//   const handleManual = ()=>{\r\n//   }\r\n\r\n//   const handleBinding = ()=>{\r\n//   }\r\n\r\n//   const handleWeighing = ()=>{\r\n//   }\r\n\r\n//   const handleWarehousing = ()=>{\r\n//   }\r\n\r\n//   const handleDelete = ()=>{\r\n//   }\r\n\r\n//   const renderCardList = () =>\r\n//   !loading ? (\r\n//     !isEmpty(list) ? (\r\n//       list.map(value => (\r\n//         <CardInfo\r\n//           key={value.id}\r\n//           item={value}\r\n//           loadData={loadData}\r\n//           f7router={f7router}\r\n//           handleDelete={handleDelete}\r\n//         />\r\n//       ))\r\n//     ) : (\r\n//       <Empty />\r\n//     )\r\n//   ) : (\r\n//     <Skeleton />\r\n//   );\r\n\r\n//   return (\r\n//     <Page pageContent={false}>\r\n//       <Navbar>\r\n//         <NavLeft>\r\n//           <a onClick={() => f7router.back()} className=\"ne-navleft\">\r\n//             <img alt=\"\" style={{ height: 24 }} src={backIcon} />\r\n//           </a>\r\n//         </NavLeft>\r\n//         <NavTitle>原材料收料单</NavTitle>\r\n//       </Navbar>\r\n//       <Toolbar tabbar top noHairline className=\"ne-top-tab\">\r\n//         <Link tabLink=\"#tab-1\" onClick={() => setTabKey(0)} tabLinkActive>\r\n//           新建\r\n//         </Link>\r\n//         <Link tabLink=\"#tab-2\" onClick={() => setTabKey(1)}>\r\n//           称重中\r\n//         </Link>\r\n//         <Link tabLink=\"#tab-3\" onClick={() => setTabKey(2)}>\r\n//           已完成\r\n//         </Link>\r\n//       </Toolbar>\r\n//       <PageContent\r\n//         infinite\r\n//         infiniteDistance={50}\r\n//         infinitePreloader={showPreloader}\r\n//         onInfinite={loadMore}\r\n//         ptrPreloader={ptrPreloader}\r\n//         ptr\r\n//         onPtrRefresh={onHandleRefresh}\r\n//         onPtrPullStart={() => {\r\n//           setPtrPreloader(true);\r\n//         }}\r\n//       >\r\n//         <div style={{ padding: '0 16px' }} className={styles.tabContainer}>\r\n//           <Tabs animated>\r\n//             <Tab\r\n//               id=\"tab-1\"\r\n//               className={`${styles.content} page-content`}\r\n//               style={{ paddingTop: '0' }}\r\n//               tabActive\r\n//             >\r\n//               {renderCardList()}\r\n//             </Tab>\r\n//             <Tab\r\n//               id=\"tab-2\"\r\n//               className={`${styles.content} page-content`}\r\n//               style={{ paddingTop: '0' }}\r\n//             >\r\n//               {renderCardList()}\r\n//             </Tab>\r\n//             <Tab\r\n//               id=\"tab-3\"\r\n//               className={`${styles.content} page-content`}\r\n//               style={{ paddingTop: '0' }}\r\n//             >\r\n//               {renderCardList()}\r\n//             </Tab>\r\n//           </Tabs>\r\n//         </div>\r\n//       </PageContent>\r\n//       <div className={styles['detail-bottom']}>\r\n//         {tabKey == 0 && <Button className={styles['bottom-btn-confirm']}  onClick={() => handleAutomatic()} >\r\n//           {getFormattedMsg('RawMaterialWarehousing.button.automatic')}\r\n//         </Button>}\r\n//         {tabKey == 0 && <Button className={styles['bottom-btn-confirm']}  onClick={() => handleManual()} >\r\n//           {getFormattedMsg('RawMaterialWarehousing.button.manual')}\r\n//         </Button>}\r\n//         {tabKey == 0 && <Button className={styles['bottom-btn-confirm']}  onClick={() => handleBinding()}>\r\n//           {getFormattedMsg('RawMaterialWarehousing.button.binding')}\r\n//         </Button>}\r\n//         {tabKey == 1 && <Button className={styles['bottom-btn-one']}  onClick={() => handleWeighing()} >\r\n//           {getFormattedMsg('RawMaterialWarehousing.button.weighing')}\r\n//         </Button>}\r\n//         {tabKey == 2 && <Button className={styles['bottom-btn-one']}  onClick={() => handleWarehousing()} >\r\n//           {getFormattedMsg('RawMaterialWarehousing.button.warehousing')}\r\n//         </Button>}\r\n//       </div>\r\n//     </Page>\r\n//   );\r\n// };\r\n\r\n// export default RawMaterialWarehousing;\r\n"],"mappings},"metadata":{},"sourceType":"module"}