{"ast":null,"code":"import { __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { useRef, useCallback } from 'react';\n\nfunction useLockFn(fn) {\n  var _this = this;\n\n  var lockRef = useRef(false);\n  return useCallback(function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(_this, void 0, void 0, function () {\n      var ret, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (lockRef.current) return [2\n            /*return*/\n            ];\n            lockRef.current = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , fn.apply(void 0, __spreadArray([], __read(args), false))];\n\n          case 2:\n            ret = _a.sent();\n            lockRef.current = false;\n            return [2\n            /*return*/\n            , ret];\n\n          case 3:\n            e_1 = _a.sent();\n            lockRef.current = false;\n            throw e_1;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, [fn]);\n}\n\nexport default useLockFn;","map":null,"metadata":{},"sourceType":"module"}