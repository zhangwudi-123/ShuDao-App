{"ast":null,"code":"import $ from 'dom7';\n\nfunction invokeHandler(handler, event, args) {\n  if (typeof handler === 'function') {\n    // call function handler\n    handler(event, ...args);\n  }\n}\n\nfunction handleEvent(event, args, vnode) {\n  const name = event.type;\n  const on = vnode.data.on; // call event handler(s) if exists\n\n  if (on && on[name]) {\n    invokeHandler(on[name], event, args, vnode);\n  }\n}\n\nfunction createListener() {\n  return function handler(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    handleEvent(event, args, handler.vnode);\n  };\n}\n\nfunction updateEvents(oldVnode, vnode) {\n  const oldOn = oldVnode.data.on;\n  const oldListener = oldVnode.listener;\n  const oldElm = oldVnode.elm;\n  const on = vnode && vnode.data.on;\n  const elm = vnode && vnode.elm; // optimization for reused immutable handlers\n\n  if (oldOn === on) {\n    return;\n  } // remove existing listeners which no longer used\n\n\n  if (oldOn && oldListener) {\n    // if element changed or deleted we remove all existing listeners unconditionally\n    if (!on) {\n      Object.keys(oldOn).forEach(name => {\n        $(oldElm).off(name, oldListener);\n      });\n    } else {\n      Object.keys(oldOn).forEach(name => {\n        if (!on[name]) {\n          $(oldElm).off(name, oldListener);\n        }\n      });\n    }\n  } // add new listeners which has not already attached\n\n\n  if (on) {\n    // reuse existing listener or create new\n    const listener = oldVnode.listener || createListener();\n    vnode.listener = listener; // update vnode for listener\n\n    listener.vnode = vnode; // if element changed or added we add all needed listeners unconditionally\n\n    if (!oldOn) {\n      Object.keys(on).forEach(name => {\n        $(elm).on(name, listener);\n      });\n    } else {\n      Object.keys(on).forEach(name => {\n        if (!oldOn[name]) {\n          $(elm).on(name, listener);\n        }\n      });\n    }\n  }\n}\n\nexport default {\n  create: updateEvents,\n  update: updateEvents,\n  destroy: updateEvents\n};","map":null,"metadata":{},"sourceType":"module"}