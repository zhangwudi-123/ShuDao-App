{"ast":null,"code":"import $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Stepper from './stepper-class';\nimport ConstructorMethods from '../../utils/constructor-methods';\nexport default {\n  name: 'stepper',\n\n  create() {\n    const app = this;\n    app.stepper = Utils.extend(ConstructorMethods({\n      defaultSelector: '.stepper',\n      constructor: Stepper,\n      app,\n      domProp: 'f7Stepper'\n    }), {\n      getValue() {\n        let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.stepper';\n        const stepper = app.stepper.get(el);\n        if (stepper) return stepper.getValue();\n        return undefined;\n      },\n\n      setValue() {\n        let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.stepper';\n        let value = arguments.length > 1 ? arguments[1] : undefined;\n        const stepper = app.stepper.get(el);\n        if (stepper) return stepper.setValue(value);\n        return undefined;\n      }\n\n    });\n  },\n\n  static: {\n    Stepper\n  },\n  on: {\n    tabMounted(tabEl) {\n      const app = this;\n      $(tabEl).find('.stepper-init').each((index, stepperEl) => {\n        const dataset = $(stepperEl).dataset();\n        app.stepper.create(Utils.extend({\n          el: stepperEl\n        }, dataset || {}));\n      });\n    },\n\n    tabBeforeRemove(tabEl) {\n      $(tabEl).find('.stepper-init').each((index, stepperEl) => {\n        if (stepperEl.f7Stepper) stepperEl.f7Stepper.destroy();\n      });\n    },\n\n    pageInit(page) {\n      const app = this;\n      page.$el.find('.stepper-init').each((index, stepperEl) => {\n        const dataset = $(stepperEl).dataset();\n        app.stepper.create(Utils.extend({\n          el: stepperEl\n        }, dataset || {}));\n      });\n    },\n\n    pageBeforeRemove(page) {\n      page.$el.find('.stepper-init').each((index, stepperEl) => {\n        if (stepperEl.f7Stepper) stepperEl.f7Stepper.destroy();\n      });\n    }\n\n  },\n  vnode: {\n    'stepper-init': {\n      insert(vnode) {\n        const app = this;\n        const stepperEl = vnode.elm;\n        const dataset = $(stepperEl).dataset();\n        app.stepper.create(Utils.extend({\n          el: stepperEl\n        }, dataset || {}));\n      },\n\n      destroy(vnode) {\n        const stepperEl = vnode.elm;\n        if (stepperEl.f7Stepper) stepperEl.f7Stepper.destroy();\n      }\n\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}