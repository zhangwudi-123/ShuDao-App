{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Preloader = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7Preloader, _React$Component);\n\n  function F7Preloader(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Preloader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Preloader).call(this, props, context));\n\n    _this.state = function () {\n      var self = _assertThisInitialized(_this);\n\n      var $f7 = self.$f7;\n\n      if (!$f7) {\n        self.$f7ready(function () {\n          self.setState({\n            _theme: self.$theme\n          });\n        });\n      }\n\n      return {\n        _theme: $f7 ? self.$theme : null\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(F7Preloader, [{\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var sizeComputed = self.sizeComputed,\n          props = self.props;\n      var id = props.id,\n          style = props.style,\n          className = props.className;\n      var theme = self.state._theme;\n      var preloaderStyle = {};\n\n      if (sizeComputed) {\n        preloaderStyle.width = \"\".concat(sizeComputed, \"px\");\n        preloaderStyle.height = \"\".concat(sizeComputed, \"px\");\n        preloaderStyle['--f7-preloader-size'] = \"\".concat(sizeComputed, \"px\");\n      }\n\n      if (style) Utils.extend(preloaderStyle, style || {});\n      var innerEl;\n\n      if (theme && theme.md) {\n        innerEl = React.createElement('span', {\n          className: 'preloader-inner'\n        }, React.createElement('span', {\n          className: 'preloader-inner-gap'\n        }), React.createElement('span', {\n          className: 'preloader-inner-left'\n        }, React.createElement('span', {\n          className: 'preloader-inner-half-circle'\n        })), React.createElement('span', {\n          className: 'preloader-inner-right'\n        }, React.createElement('span', {\n          className: 'preloader-inner-half-circle'\n        })));\n      } else if (theme && theme.ios) {\n        innerEl = React.createElement('span', {\n          className: 'preloader-inner'\n        }, React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }), React.createElement('span', {\n          className: 'preloader-inner-line'\n        }));\n      } else if (theme && theme.aurora) {\n        innerEl = React.createElement('span', {\n          className: 'preloader-inner'\n        }, React.createElement('span', {\n          className: 'preloader-inner-circle'\n        }));\n      }\n\n      var classes = Utils.classNames(className, 'preloader', Mixins.colorClasses(props));\n      return React.createElement('span', {\n        id: id,\n        style: preloaderStyle,\n        className: classes\n      }, innerEl);\n    }\n  }, {\n    key: \"sizeComputed\",\n    get: function get() {\n      var s = this.props.size;\n\n      if (s && typeof s === 'string' && s.indexOf('px') >= 0) {\n        s = s.replace('px', '');\n      }\n\n      return s;\n    }\n  }]);\n\n  return F7Preloader;\n}(React.Component);\n\n__reactComponentSetProps(F7Preloader, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  size: [Number, String]\n}, Mixins.colorProps));\n\nF7Preloader.displayName = 'f7-preloader';\nexport default F7Preloader;","map":null,"metadata":{},"sourceType":"module"}