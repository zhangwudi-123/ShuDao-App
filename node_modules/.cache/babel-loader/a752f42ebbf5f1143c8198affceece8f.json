{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.includes\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios2 = _interopRequireDefault(require(\"axios\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _Core = _interopRequireDefault(require(\"../Core\"));\n\nvar _session = require(\"@hvisions/toolkit/lib/session\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar codeMessage = {\n  200: '服务器成功返回请求的数据',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器',\n  502: '网关错误',\n  503: '服务不可用，服务器暂时过载或维护',\n  504: '网关超时',\n  601: '系统授权'\n};\nvar config = {\n  // baseURL: process.env.baseURL || process.env.apiUrl || \"\"\n  // timeout: 60 * 1000, // Timeout\n  // withCredentials: true, // Check cross-site Access-Control\n  'X-Requested-With': 'XMLHttpRequest',\n  // xhr\n  'Cache-Control': 'no-cache'\n};\n\nfunction formatUrl(path, isRoot) {\n  var reqPath = \"\".concat(isRoot ? '/auth' : '').concat(path);\n  var url = \"\".concat((0, _session.getApiAddress)()).concat(reqPath);\n  return url;\n}\n\nvar Service = /*#__PURE__*/function () {\n  function Service() {\n    _classCallCheck(this, Service);\n\n    var _axios = _axios2.default.create(config); // 拦截请求\n\n\n    _axios.interceptors.request.use(function (config) {\n      var conf = _objectSpread({}, config, {\n        deviceType: 'WEB'\n      });\n\n      var token = {};\n\n      if (_Core.default.getSaas()) {\n        token = {\n          'jwt-token': (0, _session.getJwtToken)(),\n          refreshToken: (0, _session.getRefreshToken)()\n        };\n      } else {\n        token = {\n          token: (0, _session.getToken)()\n        };\n      }\n\n      if (token && !conf.headers.token) {\n        // header 中加入 token\n        conf = (0, _lodash.merge)(conf, {\n          headers: token\n        });\n      }\n\n      return conf;\n    }, function (error) {\n      return Promise.reject(error);\n    }); // 拦截返回\n\n\n    _axios.interceptors.response.use( // response => response.data.data,\n    function (response) {\n      var _response$data = response.data,\n          code = _response$data.code,\n          message = _response$data.message;\n      var successCode = [200];\n\n      if (!successCode.includes(code)) {\n        throw new Error(message);\n      }\n\n      return response.data.data;\n    }, function (error) {\n      var err = {};\n\n      if (error.response) {\n        var _error$response$confi = error.response.config,\n            cfg = _error$response$confi === void 0 ? {} : _error$response$confi; // The request was made, but the server responded with a status code\n        // that falls out of the range of 2xx\n\n        var _e = typeof error.response.data === 'string' ? {\n          error_message: error.response.data\n        } : error.response.data;\n\n        err = _objectSpread({}, _e, {\n          status: error.response.status,\n          url: cfg.url || ''\n        });\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        err = error;\n      }\n\n      var errortext = err.error_message || err.message || codeMessage[err.status]; // log to console\n\n      console.error(err);\n\n      switch (+err.status) {\n        case 401:\n          (0, _session.clear)();\n          window.location.href = '/401';\n          break;\n\n        case 404:\n          window.location.href = '/404';\n          break;\n\n        case 500:\n          window.location.href = '/500';\n          break;\n\n        case 601:\n          window.location.href = '/601';\n          break;\n\n        default:\n          if ([408].includes(err.status)) {\n            // 授权失败， 登录失效或未登录\n            // 清除用户与token信息\n            (0, _session.clear)();\n            return;\n          }\n\n          break;\n      }\n\n      var e = new Error(errortext);\n      e.status = err.status;\n      e.response = error.response;\n      throw e;\n    });\n\n    this.$http = _axios;\n  }\n\n  _createClass(Service, [{\n    key: \"request\",\n    value: function request(url, method) {\n      var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          params = _ref.params,\n          data = _ref.data,\n          _ref$headers = _ref.headers,\n          headers = _ref$headers === void 0 ? {} : _ref$headers,\n          _ref$isRoot = _ref.isRoot,\n          isRoot = _ref$isRoot === void 0 ? false : _ref$isRoot,\n          others = _objectWithoutProperties(_ref, [\"params\", \"data\", \"headers\", \"isRoot\"]);\n\n      if (!url) return;\n\n      var conf = _objectSpread({}, others, {\n        url: formatUrl(url, isRoot),\n        method: method,\n        headers: headers,\n        // disable browser's cache\n        // always make a new request\n        params: _objectSpread({}, params, {\n          timestamp: new Date().getTime()\n        }),\n        data: data\n      });\n\n      conf.headers = (0, _lodash.omitBy)(conf.headers, function (v) {\n        return typeof v === 'undefined';\n      });\n      return this.$http.request(conf);\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, params) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(url, 'GET', _objectSpread({}, config, {\n        params: params\n      }));\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(url, 'POST', _objectSpread({}, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(url, 'PUT', _objectSpread({}, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(url, 'DELETE', _objectSpread({}, config, {\n        data: data\n      }));\n    }\n  }]);\n\n  return Service;\n}();\n\nexports.default = Service;","map":null,"metadata":{},"sourceType":"script"}