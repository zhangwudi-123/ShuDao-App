{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Icon = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7Icon, _React$Component);\n\n  function F7Icon(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Icon);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Icon).call(this, props, context));\n    _this.__reactRefs = {};\n\n    _this.state = function () {\n      var self = _assertThisInitialized(_this);\n\n      var $f7 = self.$f7;\n\n      if (!$f7) {\n        self.$f7ready(function () {\n          self.setState({\n            _theme: self.$theme\n          });\n        });\n      }\n\n      return {\n        _theme: $f7 ? self.$theme : null\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(F7Icon, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          style = props.style;\n      var size = props.size;\n\n      if (typeof size === 'number' || parseFloat(size) === size * 1) {\n        size = \"\".concat(size, \"px\");\n      }\n\n      return React.createElement('i', {\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        id: id,\n        style: Utils.extend({\n          fontSize: size,\n          width: size,\n          height: size\n        }, style),\n        className: self.classes\n      }, self.iconTextComputed, this.slots['default']);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n\n      if (self.f7Tooltip && self.f7Tooltip.destroy) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var el = self.refs.el;\n      if (!el) return;\n      var tooltip = self.props.tooltip;\n      if (!tooltip) return;\n      self.$f7ready(function (f7) {\n        self.f7Tooltip = f7.tooltip.create({\n          targetEl: el,\n          text: tooltip\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, function (newText) {\n        var self = _this3;\n\n        if (!newText && self.f7Tooltip) {\n          self.f7Tooltip.destroy();\n          self.f7Tooltip = null;\n          delete self.f7Tooltip;\n          return;\n        }\n\n        if (newText && !self.f7Tooltip && self.$f7) {\n          self.f7Tooltip = self.$f7.tooltip.create({\n            targetEl: self.refs.el,\n            text: newText\n          });\n          return;\n        }\n\n        if (!newText || !self.f7Tooltip) return;\n        self.f7Tooltip.setText(newText);\n      });\n    }\n  }, {\n    key: \"iconTextComputed\",\n    get: function get() {\n      var self = this;\n      var _self$props = self.props,\n          material = _self$props.material,\n          f7 = _self$props.f7,\n          md = _self$props.md,\n          ios = _self$props.ios,\n          aurora = _self$props.aurora;\n      var theme = self.state._theme;\n      var text = material || f7;\n\n      if (md && theme && theme.md && (md.indexOf('material:') >= 0 || md.indexOf('f7:') >= 0)) {\n        text = md.split(':')[1];\n      } else if (ios && theme && theme.ios && (ios.indexOf('material:') >= 0 || ios.indexOf('f7:') >= 0)) {\n        text = ios.split(':')[1];\n      } else if (aurora && theme && theme.aurora && (aurora.indexOf('material:') >= 0 || aurora.indexOf('f7:') >= 0)) {\n        text = aurora.split(':')[1];\n      }\n\n      return text;\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      var classes = {\n        icon: true\n      };\n      var self = this;\n      var props = self.props;\n      var theme = self.state._theme;\n      var material = props.material,\n          f7 = props.f7,\n          icon = props.icon,\n          md = props.md,\n          ios = props.ios,\n          aurora = props.aurora,\n          className = props.className;\n      var themeIcon;\n      if (theme && theme.ios) themeIcon = ios;else if (theme && theme.md) themeIcon = md;else if (theme && theme.aurora) themeIcon = aurora;\n\n      if (themeIcon) {\n        var parts = themeIcon.split(':');\n        var prop = parts[0];\n        var value = parts[1];\n\n        if (prop === 'material' || prop === 'f7') {\n          classes['material-icons'] = prop === 'material';\n          classes['f7-icons'] = prop === 'f7';\n        }\n\n        if (prop === 'icon') {\n          classes[value] = true;\n        }\n      } else {\n        classes = {\n          icon: true,\n          'material-icons': material,\n          'f7-icons': f7\n        };\n        if (icon) classes[icon] = true;\n      }\n\n      return Utils.classNames(className, classes, Mixins.colorClasses(props));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Icon;\n}(React.Component);\n\n__reactComponentSetProps(F7Icon, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  material: String,\n  f7: String,\n  icon: String,\n  ios: String,\n  aurora: String,\n  md: String,\n  tooltip: String,\n  size: [String, Number]\n}, Mixins.colorProps));\n\nF7Icon.displayName = 'f7-icon';\nexport default F7Icon;","map":null,"metadata":{},"sourceType":"module"}