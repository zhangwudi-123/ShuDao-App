{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _toolkit = require(\"@hvisions/toolkit\");\n\nvar _Context = _interopRequireDefault(require(\"./Context\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar getLocalSettings = _toolkit.i18n.getLocalSettings;\n\nvar getDisplayName = function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nvar withPermission = function withPermission(Component, permission, type) {\n  var ContextConfig = function ContextConfig(props) {\n    var PermissionComponent = function PermissionComponent(permissions, props) {\n      var _permissions = (0, _lodash.isArray)(permissions) ? permissions : [];\n\n      var hasPer = _permissions.find(function (per) {\n        return per.encode.toUpperCase() === permission.toUpperCase();\n      });\n\n      if ((0, _lodash.isEmpty)(hasPer)) {\n        return _react.default.createElement(_react.Fragment, null);\n      }\n\n      if (type === 'icon') {\n        return _react.default.createElement(Component, props);\n      } else {\n        return _react.default.createElement(Component, props, getLocalSettings() == 'zh_CN' ? hasPer.fullName : hasPer.englishName);\n      }\n    };\n\n    return _react.default.createElement(_Context.default.Consumer, null, function (context) {\n      return PermissionComponent(context, props);\n    });\n  };\n\n  ContextConfig.displayName = \"WithPermission([\".concat(permission, \"]\").concat(getDisplayName(Component), \")\");\n  return ContextConfig;\n};\n\nvar _default = withPermission;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}