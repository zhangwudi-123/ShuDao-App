{"ast":null,"code":"import useLatest from '../useLatest';\nimport { getTargetElement } from '../utils/domTarget';\nimport useEffectWithTarget from '../utils/useEffectWithTarget';\n\nvar useDrag = function (data, target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var optionsRef = useLatest(options);\n  var dataRef = useLatest(data);\n  useEffectWithTarget(function () {\n    var targetElement = getTargetElement(target);\n\n    if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {\n      return;\n    }\n\n    var onDragStart = function (event) {\n      var _a, _b;\n\n      (_b = (_a = optionsRef.current).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n      event.dataTransfer.setData('custom', JSON.stringify(dataRef.current));\n    };\n\n    var onDragEnd = function (event) {\n      var _a, _b;\n\n      (_b = (_a = optionsRef.current).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n    };\n\n    targetElement.setAttribute('draggable', 'true');\n    targetElement.addEventListener('dragstart', onDragStart);\n    targetElement.addEventListener('dragend', onDragEnd);\n    return function () {\n      targetElement.removeEventListener('dragstart', onDragStart);\n      targetElement.removeEventListener('dragend', onDragEnd);\n    };\n  }, [], target);\n};\n\nexport default useDrag;","map":null,"metadata":{},"sourceType":"module"}