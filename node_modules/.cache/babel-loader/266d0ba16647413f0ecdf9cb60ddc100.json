{"ast":null,"code":"import { Service } from '@hvisions/toolkit';\nconst appName = '/warehouse-service';\n\nclass WaresLocation extends Service {\n  async getLocationByQuery(data) {\n    return await this.post(`${appName}/warehouse/getLocationByQuery`, { ...data,\n      direction: false,\n      sort: true,\n      sortCol: 'id'\n    });\n  }\n\n  async createWaresLocation(data) {\n    try {\n      return await this.post(`${appName}/warehouse/createWaresLocation`, data);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async updateWaresLocation(data) {\n    try {\n      return await this.put(`${appName}/warehouse/updateWaresLocation`, data);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async deleteWareLocation(id) {\n    try {\n      await this.delete(`${appName}/warehouse/deleteWareLocation/${id}`);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async createLocationRule(data) {\n    try {\n      return await this.post(`${appName}/warehouse/createLocationRule`, data);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async updateLocationRule(data) {\n    try {\n      return await this.put(`${appName}/warehouse/updateLocationRule`, data);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async getRuleByLocationId(id) {\n    try {\n      return await this.get(`${appName}/warehouse/getRuleByLocationId/${id}`);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async getAllMaterials() {\n    try {\n      return await this.get(`/materials-master-data/materials/getAllMaterials`);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async deleteLocationRule(id) {\n    try {\n      return await this.delete(`${appName}/warehouse/deleteLocationRule/${id}`);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async findAllByQuery() {\n    try {\n      return await this.post(`${appName}/warehouse/findAllByQuery`, {});\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async synchronize(id) {\n    try {\n      return await this.put(`${appName}/warehouse/synchronize?locationId=${id}`);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async getMaterials(params) {\n    try {\n      return await this.post(`/materials-master-data/material/getMaterial`, params);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n}\n\nexport default new WaresLocation();","map":{"version":3,"names":["Service","appName","WaresLocation","getLocationByQuery","data","post","direction","sort","sortCol","createWaresLocation","error","Error","updateWaresLocation","put","deleteWareLocation","id","delete","createLocationRule","updateLocationRule","getRuleByLocationId","get","getAllMaterials","deleteLocationRule","findAllByQuery","synchronize","getMaterials","params"],"sources":["D:/project/vsCode/baicaho/bc-app/src/api/waresLocation.js"],"sourcesContent":["import { Service } from '@hvisions/toolkit';\r\n\r\nconst appName = '/warehouse-service';\r\nclass WaresLocation extends Service {\r\n  async getLocationByQuery(data) {\r\n    return await this.post(`${appName}/warehouse/getLocationByQuery`, { ...data, direction: false, sort: true, sortCol: 'id' });\r\n  }\r\n\r\n  async createWaresLocation(data) {\r\n    try {\r\n      return await this.post(`${appName}/warehouse/createWaresLocation`, data);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async updateWaresLocation(data) {\r\n    try {\r\n      return await this.put(`${appName}/warehouse/updateWaresLocation`, data);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async deleteWareLocation(id) {\r\n    try {\r\n      await this.delete(`${appName}/warehouse/deleteWareLocation/${id}`);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async createLocationRule(data) {\r\n    try {\r\n      return await this.post(`${appName}/warehouse/createLocationRule`, data);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async updateLocationRule(data) {\r\n    try {\r\n      return await this.put(`${appName}/warehouse/updateLocationRule`, data);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async getRuleByLocationId(id) {\r\n    try {\r\n      return await this.get(`${appName}/warehouse/getRuleByLocationId/${id}`);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async getAllMaterials() {\r\n    try {\r\n      return await this.get(`/materials-master-data/materials/getAllMaterials`);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async deleteLocationRule(id) {\r\n    try {\r\n      return await this.delete(`${appName}/warehouse/deleteLocationRule/${id}`);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async findAllByQuery() {\r\n    try {\r\n      return await this.post(`${appName}/warehouse/findAllByQuery`, {});\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async synchronize(id) {\r\n    try {\r\n      return await this.put(`${appName}/warehouse/synchronize?locationId=${id}`);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  async getMaterials(params) {\r\n    try {\r\n      return await this.post(`/materials-master-data/material/getMaterial`, params);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new WaresLocation();\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,OAAO,GAAG,oBAAhB;;AACA,MAAMC,aAAN,SAA4BF,OAA5B,CAAoC;EACV,MAAlBG,kBAAkB,CAACC,IAAD,EAAO;IAC7B,OAAO,MAAM,KAAKC,IAAL,CAAW,GAAEJ,OAAQ,+BAArB,EAAqD,EAAE,GAAGG,IAAL;MAAWE,SAAS,EAAE,KAAtB;MAA6BC,IAAI,EAAE,IAAnC;MAAyCC,OAAO,EAAE;IAAlD,CAArD,CAAb;EACD;;EAEwB,MAAnBC,mBAAmB,CAACL,IAAD,EAAO;IAC9B,IAAI;MACF,OAAO,MAAM,KAAKC,IAAL,CAAW,GAAEJ,OAAQ,gCAArB,EAAsDG,IAAtD,CAAb;IACD,CAFD,CAEE,OAAOM,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEwB,MAAnBE,mBAAmB,CAACR,IAAD,EAAO;IAC9B,IAAI;MACF,OAAO,MAAM,KAAKS,GAAL,CAAU,GAAEZ,OAAQ,gCAApB,EAAqDG,IAArD,CAAb;IACD,CAFD,CAEE,OAAOM,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEuB,MAAlBI,kBAAkB,CAACC,EAAD,EAAK;IAC3B,IAAI;MACF,MAAM,KAAKC,MAAL,CAAa,GAAEf,OAAQ,iCAAgCc,EAAG,EAA1D,CAAN;IACD,CAFD,CAEE,OAAOL,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEuB,MAAlBO,kBAAkB,CAACb,IAAD,EAAO;IAC7B,IAAI;MACF,OAAO,MAAM,KAAKC,IAAL,CAAW,GAAEJ,OAAQ,+BAArB,EAAqDG,IAArD,CAAb;IACD,CAFD,CAEE,OAAOM,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEuB,MAAlBQ,kBAAkB,CAACd,IAAD,EAAO;IAC7B,IAAI;MACF,OAAO,MAAM,KAAKS,GAAL,CAAU,GAAEZ,OAAQ,+BAApB,EAAoDG,IAApD,CAAb;IACD,CAFD,CAEE,OAAOM,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEwB,MAAnBS,mBAAmB,CAACJ,EAAD,EAAK;IAC5B,IAAI;MACF,OAAO,MAAM,KAAKK,GAAL,CAAU,GAAEnB,OAAQ,kCAAiCc,EAAG,EAAxD,CAAb;IACD,CAFD,CAEE,OAAOL,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEoB,MAAfW,eAAe,GAAG;IACtB,IAAI;MACF,OAAO,MAAM,KAAKD,GAAL,CAAU,kDAAV,CAAb;IACD,CAFD,CAEE,OAAOV,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEuB,MAAlBY,kBAAkB,CAACP,EAAD,EAAK;IAC3B,IAAI;MACF,OAAO,MAAM,KAAKC,MAAL,CAAa,GAAEf,OAAQ,iCAAgCc,EAAG,EAA1D,CAAb;IACD,CAFD,CAEE,OAAOL,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEmB,MAAda,cAAc,GAAG;IACrB,IAAI;MACF,OAAO,MAAM,KAAKlB,IAAL,CAAW,GAAEJ,OAAQ,2BAArB,EAAiD,EAAjD,CAAb;IACD,CAFD,CAEE,OAAOS,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEgB,MAAXc,WAAW,CAACT,EAAD,EAAK;IACpB,IAAI;MACF,OAAO,MAAM,KAAKF,GAAL,CAAU,GAAEZ,OAAQ,qCAAoCc,EAAG,EAA3D,CAAb;IACD,CAFD,CAEE,OAAOL,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;EAEiB,MAAZe,YAAY,CAACC,MAAD,EAAS;IACzB,IAAI;MACF,OAAO,MAAM,KAAKrB,IAAL,CAAW,6CAAX,EAAyDqB,MAAzD,CAAb;IACD,CAFD,CAEE,OAAOhB,KAAP,EAAc;MACd,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;IACD;EACF;;AA3FiC;;AA+FpC,eAAe,IAAIR,aAAJ,EAAf"},"metadata":{},"sourceType":"module"}