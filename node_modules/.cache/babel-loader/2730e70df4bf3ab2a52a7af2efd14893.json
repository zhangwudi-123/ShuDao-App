{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessageOn = getMessageOn;\nexports.saveMessageOn = saveMessageOn;\nexports.getToken = getToken;\nexports.saveToken = saveToken;\nexports.saveApiIP = saveApiIP;\nexports.saveApiPort = saveApiPort;\nexports.saveApiHttps = saveApiHttps;\nexports.getAuthMenus = getAuthMenus;\nexports.getAuthData = getAuthData;\nexports.getApiIP = getApiIP;\nexports.getApiPort = getApiPort;\nexports.getApiHttps = getApiHttps;\nexports.getApiAddress = getApiAddress;\nexports.setAuthData = setAuthData;\nexports.setAuthMenus = setAuthMenus;\nexports.updateAuthData = updateAuthData;\nexports.setLocale = setLocale;\nexports.getLocale = getLocale;\nexports.getIsMenuPermission = getIsMenuPermission;\nexports.clear = clear;\nexports.isLoggedIn = isLoggedIn;\nexports.default = void 0;\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar AUTH_TOKEN_KEY = 'AUTH_TOKEN_KEY';\nvar AUTH_DATA_KEY = 'AUTH_DATA';\nvar AUTH_MENU = 'AUTH_MENU';\nvar API_IP_KEY = 'API_IP_KEY';\nvar API_PORT_KEY = 'API_PORT_KEY';\nvar API_HTTPS_KEY = 'API_HTTPS_KEY';\nvar ROUTE_ID = 'ROUTE_ID';\nvar MESSAGE_ON = 'MESSAGE_ON';\n\nfunction getMessageOn() {\n  return localStorage.getItem(MESSAGE_ON);\n}\n\nfunction saveMessageOn(messageOn) {\n  return localStorage.setItem(MESSAGE_ON, messageOn);\n}\n\nfunction getToken() {\n  return localStorage.getItem(AUTH_TOKEN_KEY);\n}\n\nfunction saveToken(token) {\n  return localStorage.setItem(AUTH_TOKEN_KEY, token);\n}\n\nfunction saveApiIP(params) {\n  return localStorage.setItem(API_IP_KEY, params);\n}\n\nfunction saveApiPort(params) {\n  return localStorage.setItem(API_PORT_KEY, params);\n}\n\nfunction saveApiHttps(params) {\n  return localStorage.setItem(API_HTTPS_KEY, params);\n}\n\nfunction getAuthMenus() {\n  var data;\n\n  try {\n    data = JSON.parse(localStorage.getItem(AUTH_MENU));\n  } catch (e) {\n    data = null;\n  }\n\n  return data;\n}\n\nfunction getAuthData() {\n  var data;\n\n  try {\n    data = JSON.parse(localStorage.getItem(AUTH_DATA_KEY));\n  } catch (e) {\n    // do nothing\n    data = null;\n  }\n\n  return data;\n}\n\nfunction getApiIP() {\n  return localStorage.getItem(API_IP_KEY) || process.env.__API_HOST__ || '';\n}\n\nfunction getApiPort() {\n  return localStorage.getItem(API_PORT_KEY) || process.env.__API_PORT__ || '';\n}\n\nfunction getApiHttps() {\n  var https = localStorage.getItem(API_HTTPS_KEY) || process.env.__API_HTTPS__;\n\n  return https === 'true';\n}\n\nfunction getApiAddress() {\n  var isHttps = getApiHttps();\n  var prefix = isHttps ? 'https' : 'http';\n  var port = \":\".concat(getApiPort());\n\n  if (!isHttps && port == 80 || isHttps && port == 443) {\n    // 默认端口就不需要加在后面了\n    port = '';\n  }\n\n  return \"\".concat(prefix, \"://\").concat(getApiIP()).concat(port);\n}\n\nfunction setAuthData(data) {\n  return localStorage.setItem(AUTH_DATA_KEY, JSON.stringify(data));\n}\n\nfunction setAuthMenus(data) {\n  return localStorage.setItem(AUTH_MENU, JSON.stringify(data));\n}\n\nfunction updateAuthData(key, value) {\n  if (!isLoggedIn()) {\n    return false;\n  }\n\n  var data = getAuthData();\n\n  if (data) {\n    data = _objectSpread({}, data, _defineProperty({}, key, value));\n    setAuthData(data);\n  }\n}\n\nfunction setLocale(locale) {\n  return localStorage.setItem('locale', locale);\n}\n\nfunction getLocale() {\n  return localStorage.getItem('locale') || 'zh_CN';\n}\n\nfunction getIsMenuPermission(key) {\n  var data = getAuthMenus();\n\n  if (!(0, _lodash.isEmpty)(data)) {\n    return (0, _lodash.isEmpty)(data.filter(function (item) {\n      return item.fullName === key;\n    }));\n  }\n}\n\nfunction clear() {\n  localStorage.removeItem(AUTH_DATA_KEY);\n  localStorage.removeItem(AUTH_TOKEN_KEY);\n  localStorage.removeItem(ROUTE_ID);\n}\n\nfunction isLoggedIn() {\n  var token = getToken();\n  var data = getAuthData();\n  return Boolean(token) && Boolean(data);\n}\n\nvar _default = {\n  getToken: getToken,\n  saveToken: saveToken,\n  getAuthData: getAuthData,\n  setAuthData: setAuthData,\n  updateAuthData: updateAuthData,\n  clear: clear,\n  isLoggedIn: isLoggedIn,\n  getIsMenuPermission: getIsMenuPermission,\n  getAuthMenus: getAuthMenus,\n  setAuthMenus: setAuthMenus,\n  getApiIP: getApiIP,\n  getApiPort: getApiPort,\n  getApiAddress: getApiAddress,\n  getApiHttps: getApiHttps,\n  saveApiIP: saveApiIP,\n  saveApiPort: saveApiPort,\n  saveApiHttps: saveApiHttps\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}