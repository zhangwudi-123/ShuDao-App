{"ast":null,"code":"import React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { RightOutline } from 'antd-mobile-icons';\nimport classNames from 'classnames';\nimport { isNodeWithContent } from '../../utils/is-node-with-content';\nconst classPrefix = `adm-list-item`;\nexport const ListItem = props => {\n  var _a;\n\n  const clickable = (_a = props.clickable) !== null && _a !== void 0 ? _a : !!props.onClick;\n  const arrow = props.arrow === undefined ? clickable : props.arrow;\n  const content = React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, isNodeWithContent(props.prefix) && React.createElement(\"div\", {\n    className: `${classPrefix}-content-prefix`\n  }, props.prefix), React.createElement(\"div\", {\n    className: `${classPrefix}-content-main`\n  }, isNodeWithContent(props.title) && React.createElement(\"div\", {\n    className: `${classPrefix}-title`\n  }, props.title), props.children, isNodeWithContent(props.description) && React.createElement(\"div\", {\n    className: `${classPrefix}-description`\n  }, props.description)), isNodeWithContent(props.extra) && React.createElement(\"div\", {\n    className: `${classPrefix}-content-extra`\n  }, props.extra), isNodeWithContent(arrow) && React.createElement(\"div\", {\n    className: `${classPrefix}-content-arrow`\n  }, arrow === true ? React.createElement(RightOutline, null) : arrow));\n  return withNativeProps(props, React.createElement(clickable ? 'a' : 'div', {\n    className: classNames(`${classPrefix}`, clickable ? ['adm-plain-anchor'] : [], props.disabled && `${classPrefix}-disabled`),\n    onClick: props.disabled ? undefined : props.onClick\n  }, content));\n};","map":null,"metadata":{},"sourceType":"module"}