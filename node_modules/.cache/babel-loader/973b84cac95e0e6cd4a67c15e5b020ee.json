{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Swiper = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7Swiper, _React$Component);\n\n  function F7Swiper(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Swiper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Swiper).call(this, props, context));\n    _this.__reactRefs = {};\n    return _this;\n  }\n\n  _createClass(F7Swiper, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          style = props.style,\n          className = props.className;\n      var paginationEl;\n      var scrollbarEl;\n      var buttonNextEl;\n      var buttonPrevEl;\n\n      if (self.paginationComputed) {\n        paginationEl = React.createElement('div', {\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['paginationEl'] = __reactNode;\n          },\n          className: 'swiper-pagination'\n        });\n      }\n\n      if (self.scrollbarComputed) {\n        scrollbarEl = React.createElement('div', {\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['scrollbarEl'] = __reactNode;\n          },\n          className: 'swiper-scrollbar'\n        });\n      }\n\n      if (self.navigationComputed) {\n        buttonNextEl = React.createElement('div', {\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['nextEl'] = __reactNode;\n          },\n          className: 'swiper-button-next'\n        });\n        buttonPrevEl = React.createElement('div', {\n          ref: function ref(__reactNode) {\n            _this2.__reactRefs['prevEl'] = __reactNode;\n          },\n          className: 'swiper-button-prev'\n        });\n      }\n\n      var classes = Utils.classNames(className, 'swiper-container', Mixins.colorClasses(props));\n      return React.createElement('div', {\n        id: id,\n        style: style,\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        className: classes\n      }, this.slots['before-wrapper'], React.createElement('div', {\n        className: 'swiper-wrapper'\n      }, this.slots['default']), paginationEl, scrollbarEl, buttonPrevEl, buttonNextEl, this.slots['after-wrapper']);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      if (!self.props.init) return;\n      if (self.swiper && self.swiper.destroy) self.swiper.destroy();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      if (!self.props.init) return;\n      self.$f7ready(function (f7) {\n        var newParams = {\n          pagination: {},\n          navigation: {},\n          scrollbar: {}\n        };\n        var _self$props = self.props,\n            params = _self$props.params,\n            pagination = _self$props.pagination,\n            navigation = _self$props.navigation,\n            scrollbar = _self$props.scrollbar;\n        if (params) Utils.extend(newParams, params);\n        if (pagination && !newParams.pagination.el) newParams.pagination.el = self.refs.paginationEl;\n\n        if (navigation && !newParams.navigation.nextEl && !newParams.navigation.prevEl) {\n          newParams.navigation.nextEl = self.refs.nextEl;\n          newParams.navigation.prevEl = self.refs.prevEl;\n        }\n\n        if (scrollbar && !newParams.scrollbar.el) newParams.scrollbar.el = self.refs.scrollbarEl;\n        self.swiper = f7.swiper.create(self.refs.el, newParams);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var self = this;\n\n      if (!self.initialUpdate) {\n        self.initialUpdate = true;\n        return;\n      }\n\n      if (self.swiper && self.swiper.update) self.swiper.update();\n    }\n  }, {\n    key: \"paginationComputed\",\n    get: function get() {\n      var self = this;\n      var _self$props2 = self.props,\n          pagination = _self$props2.pagination,\n          params = _self$props2.params;\n\n      if (pagination === true || params && params.pagination && !params.pagination.el) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"scrollbarComputed\",\n    get: function get() {\n      var self = this;\n      var _self$props3 = self.props,\n          scrollbar = _self$props3.scrollbar,\n          params = _self$props3.params;\n\n      if (scrollbar === true || params && params.scrollbar && !params.scrollbar.el) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"navigationComputed\",\n    get: function get() {\n      var self = this;\n      var _self$props4 = self.props,\n          navigation = _self$props4.navigation,\n          params = _self$props4.params;\n\n      if (navigation === true || params && params.navigation && !params.navigation.nextEl && !params.navigation.prevEl) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Swiper;\n}(React.Component);\n\n__reactComponentSetProps(F7Swiper, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  params: Object,\n  pagination: Boolean,\n  scrollbar: Boolean,\n  navigation: Boolean,\n  init: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7Swiper.displayName = 'f7-swiper';\nexport default F7Swiper;","map":null,"metadata":{},"sourceType":"module"}