{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nconst defaultProps = {\n  confirmText: '确认',\n  cancelText: '取消'\n};\nexport function confirm(p) {\n  const {\n    locale\n  } = getDefaultConfig();\n  const props = mergeProps(defaultProps, {\n    confirmText: locale.common.confirm,\n    cancelText: locale.common.cancel\n  }, p);\n  return new Promise(resolve => {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      onClose: () => {\n        var _a;\n\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n        resolve(false);\n      },\n      actions: [{\n        key: 'confirm',\n        text: props.confirmText,\n        primary: true,\n        onClick: () => __awaiter(this, void 0, void 0, function* () {\n          var _a;\n\n          yield (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props);\n          resolve(true);\n        })\n      }, {\n        key: 'cancel',\n        text: props.cancelText,\n        onClick: () => __awaiter(this, void 0, void 0, function* () {\n          var _b;\n\n          yield (_b = props.onCancel) === null || _b === void 0 ? void 0 : _b.call(props);\n          resolve(false);\n        })\n      }]\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}