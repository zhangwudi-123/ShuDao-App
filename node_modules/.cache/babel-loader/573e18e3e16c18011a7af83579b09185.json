{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Range = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7Range, _React$Component);\n\n  function F7Range(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Range);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Range).call(this, props, context));\n    _this.__reactRefs = {};\n    return _this;\n  }\n\n  _createClass(F7Range, [{\n    key: \"setValue\",\n    value: function setValue(newValue) {\n      var self = this;\n      if (self.f7Range && self.f7Range.setValue) self.f7Range.setValue(newValue);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var self = this;\n\n      if (self.f7Range && self.f7Range.getValue) {\n        return self.f7Range.getValue();\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var _self$props = self.props,\n          id = _self$props.id,\n          disabled = _self$props.disabled,\n          className = _self$props.className,\n          style = _self$props.style,\n          input = _self$props.input,\n          inputId = _self$props.inputId,\n          name = _self$props.name,\n          vertical = _self$props.vertical,\n          verticalReversed = _self$props.verticalReversed;\n      var classes = Utils.classNames(className, 'range-slider', {\n        'range-slider-horizontal': !vertical,\n        'range-slider-vertical': vertical,\n        'range-slider-vertical-reversed': vertical && verticalReversed,\n        disabled: disabled\n      }, Mixins.colorClasses(props));\n      return React.createElement('div', {\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        id: id,\n        style: style,\n        className: classes\n      }, input && React.createElement('input', {\n        type: 'range',\n        name: name,\n        id: inputId\n      }), this.slots['default']);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      if (self.f7Range && self.f7Range.destroy) self.f7Range.destroy();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      self.$f7ready(function (f7) {\n        if (!self.props.init) return;\n        var props = self.props;\n        var value = props.value,\n            min = props.min,\n            max = props.max,\n            step = props.step,\n            label = props.label,\n            dual = props.dual,\n            draggableBar = props.draggableBar,\n            vertical = props.vertical,\n            verticalReversed = props.verticalReversed,\n            formatLabel = props.formatLabel,\n            scale = props.scale,\n            scaleSteps = props.scaleSteps,\n            scaleSubSteps = props.scaleSubSteps,\n            formatScaleLabel = props.formatScaleLabel,\n            limitKnobPosition = props.limitKnobPosition;\n        self.f7Range = f7.range.create(Utils.noUndefinedProps({\n          el: self.refs.el,\n          value: value,\n          min: min,\n          max: max,\n          step: step,\n          label: label,\n          dual: dual,\n          draggableBar: draggableBar,\n          vertical: vertical,\n          verticalReversed: verticalReversed,\n          formatLabel: formatLabel,\n          scale: scale,\n          scaleSteps: scaleSteps,\n          scaleSubSteps: scaleSubSteps,\n          formatScaleLabel: formatScaleLabel,\n          limitKnobPosition: limitKnobPosition,\n          on: {\n            change: function change(range, val) {\n              self.dispatchEvent('range:change rangeChange', val);\n            },\n            changed: function changed(range, val) {\n              self.dispatchEvent('range:changed rangeChanged', val);\n            }\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      __reactComponentWatch(this, 'props.value', prevProps, prevState, function (newValue) {\n        var self = _this3;\n        if (!self.f7Range) return;\n        self.f7Range.setValue(newValue);\n      });\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Range;\n}(React.Component);\n\n__reactComponentSetProps(F7Range, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  init: {\n    type: Boolean,\n    default: true\n  },\n  value: {\n    type: [Number, Array, String],\n    default: 0\n  },\n  min: {\n    type: [Number, String],\n    default: 0\n  },\n  max: {\n    type: [Number, String],\n    default: 100\n  },\n  step: {\n    type: [Number, String],\n    default: 1\n  },\n  label: {\n    type: Boolean,\n    default: false\n  },\n  dual: {\n    type: Boolean,\n    default: false\n  },\n  vertical: {\n    type: Boolean,\n    default: false\n  },\n  verticalReversed: {\n    type: Boolean,\n    default: false\n  },\n  draggableBar: {\n    type: Boolean,\n    default: true\n  },\n  formatLabel: Function,\n  scale: {\n    type: Boolean,\n    default: false\n  },\n  scaleSteps: {\n    type: Number,\n    default: 5\n  },\n  scaleSubSteps: {\n    type: Number,\n    default: 0\n  },\n  formatScaleLabel: Function,\n  limitKnobPosition: {\n    type: Boolean,\n    default: undefined\n  },\n  name: String,\n  input: Boolean,\n  inputId: String,\n  disabled: Boolean\n}, Mixins.colorProps));\n\nF7Range.displayName = 'f7-range';\nexport default F7Range;","map":null,"metadata":{},"sourceType":"module"}