{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7MenuDropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7MenuDropdown, _React$Component);\n\n  function F7MenuDropdown(props, context) {\n    _classCallCheck(this, F7MenuDropdown);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(F7MenuDropdown).call(this, props, context));\n  }\n\n  _createClass(F7MenuDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          className = props.className,\n          style = props.style,\n          contentHeight = props.contentHeight,\n          position = props.position,\n          left = props.left,\n          center = props.center,\n          right = props.right;\n      var positionComputed = position || 'left';\n      if (left) positionComputed = 'left';\n      if (center) positionComputed = 'center';\n      if (right) positionComputed = 'right';\n      var classes = Utils.classNames('menu-dropdown', \"menu-dropdown-\".concat(positionComputed), Mixins.colorClasses(props), className);\n      return React.createElement('div', {\n        className: classes,\n        id: id,\n        style: style\n      }, React.createElement('div', {\n        className: 'menu-dropdown-content',\n        style: {\n          height: contentHeight\n        }\n      }, this.slots['default']));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }]);\n\n  return F7MenuDropdown;\n}(React.Component);\n\n__reactComponentSetProps(F7MenuDropdown, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  contentHeight: String,\n  position: String,\n  left: Boolean,\n  center: Boolean,\n  right: Boolean\n}, Mixins.colorProps));\n\nF7MenuDropdown.displayName = 'f7-menu-dropdown';\nexport default F7MenuDropdown;","map":null,"metadata":{},"sourceType":"module"}