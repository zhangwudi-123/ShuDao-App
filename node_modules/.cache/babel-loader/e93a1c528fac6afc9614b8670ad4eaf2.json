{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7SwipeoutButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7SwipeoutButton, _React$Component);\n\n  function F7SwipeoutButton(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7SwipeoutButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7SwipeoutButton).call(this, props, context));\n    _this.__reactRefs = {};\n\n    (function () {\n      Utils.bindMethods(_assertThisInitialized(_this), ['onClick']);\n    })();\n\n    return _this;\n  }\n\n  _createClass(F7SwipeoutButton, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.dispatchEvent('click', event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      var className = props.className,\n          id = props.id,\n          style = props.style,\n          overswipe = props.overswipe,\n          deleteProp = props.delete,\n          close = props.close,\n          href = props.href,\n          confirmTitle = props.confirmTitle,\n          confirmText = props.confirmText,\n          text = props.text;\n      var classes = Utils.classNames(className, {\n        'swipeout-overswipe': overswipe,\n        'swipeout-delete': deleteProp,\n        'swipeout-close': close\n      }, Mixins.colorClasses(props));\n      return React.createElement('a', {\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        href: href || '#',\n        id: id,\n        style: style,\n        'data-confirm': confirmText || undefined,\n        'data-confirm-title': confirmTitle || undefined,\n        className: classes\n      }, this.slots['default'], !this.slots.default && text);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.refs.el.removeEventListener('click', this.onClick);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refs.el.addEventListener('click', this.onClick);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7SwipeoutButton;\n}(React.Component);\n\n__reactComponentSetProps(F7SwipeoutButton, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  text: String,\n  confirmTitle: String,\n  confirmText: String,\n  overswipe: Boolean,\n  close: Boolean,\n  delete: Boolean,\n  href: String\n}, Mixins.colorProps));\n\nF7SwipeoutButton.displayName = 'f7-swipeout-button';\nexport default F7SwipeoutButton;","map":null,"metadata":{},"sourceType":"module"}