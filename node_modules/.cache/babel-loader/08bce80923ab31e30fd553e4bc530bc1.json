{"ast":null,"code":"import $ from 'dom7';\nimport { window } from 'ssr-window';\nimport Utils from '../../utils/utils';\nimport Device from '../../utils/device';\nconst Statusbar = {\n  hide() {\n    if (Device.cordova && window.StatusBar) {\n      window.StatusBar.hide();\n    }\n  },\n\n  show() {\n    if (Device.cordova && window.StatusBar) {\n      window.StatusBar.show();\n    }\n  },\n\n  onClick() {\n    const app = this;\n    let pageContent;\n\n    if ($('.popup.modal-in').length > 0) {\n      // Check for opened popup\n      pageContent = $('.popup.modal-in').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.panel.panel-in').length > 0) {\n      // Check for opened panel\n      pageContent = $('.panel.panel-in').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.views > .view.tab-active').length > 0) {\n      // View in tab bar app layout\n      pageContent = $('.views > .view.tab-active').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.views').length > 0) {\n      pageContent = $('.views').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else {\n      pageContent = app.root.children('.view').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    }\n\n    if (pageContent && pageContent.length > 0) {\n      // Check for tab\n      if (pageContent.hasClass('tab')) {\n        pageContent = pageContent.parent('.tabs').children('.page-content.tab-active');\n      }\n\n      if (pageContent.length > 0) pageContent.scrollTop(0, 300);\n    }\n  },\n\n  setTextColor(color) {\n    if (Device.cordova && window.StatusBar) {\n      if (color === 'white') {\n        window.StatusBar.styleLightContent();\n      } else {\n        window.StatusBar.styleDefault();\n      }\n    }\n  },\n\n  setBackgroundColor(color) {\n    if (Device.cordova && window.StatusBar) {\n      window.StatusBar.backgroundColorByHexString(color);\n    }\n  },\n\n  isVisible() {\n    if (Device.cordova && window.StatusBar) {\n      return window.StatusBar.isVisible;\n    }\n\n    return false;\n  },\n\n  overlaysWebView() {\n    let overlays = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (Device.cordova && window.StatusBar) {\n      window.StatusBar.overlaysWebView(overlays);\n    }\n  },\n\n  init() {\n    const app = this;\n    const params = app.params.statusbar;\n    if (!params.enabled) return;\n\n    if (Device.cordova && window.StatusBar) {\n      if (params.scrollTopOnClick) {\n        $(window).on('statusTap', Statusbar.onClick.bind(app));\n      }\n\n      if (Device.ios) {\n        if (params.iosOverlaysWebView) {\n          window.StatusBar.overlaysWebView(true);\n        } else {\n          window.StatusBar.overlaysWebView(false);\n        }\n\n        if (params.iosTextColor === 'white') {\n          window.StatusBar.styleLightContent();\n        } else {\n          window.StatusBar.styleDefault();\n        }\n      }\n\n      if (Device.android) {\n        if (params.androidOverlaysWebView) {\n          window.StatusBar.overlaysWebView(true);\n        } else {\n          window.StatusBar.overlaysWebView(false);\n        }\n\n        if (params.androidTextColor === 'white') {\n          window.StatusBar.styleLightContent();\n        } else {\n          window.StatusBar.styleDefault();\n        }\n      }\n    }\n\n    if (params.iosBackgroundColor && Device.ios) {\n      Statusbar.setBackgroundColor(params.iosBackgroundColor);\n    }\n\n    if (params.androidBackgroundColor && Device.android) {\n      Statusbar.setBackgroundColor(params.androidBackgroundColor);\n    }\n  }\n\n};\nexport default {\n  name: 'statusbar',\n  params: {\n    statusbar: {\n      enabled: true,\n      scrollTopOnClick: true,\n      iosOverlaysWebView: true,\n      iosTextColor: 'black',\n      iosBackgroundColor: null,\n      androidOverlaysWebView: false,\n      androidTextColor: 'black',\n      androidBackgroundColor: null\n    }\n  },\n\n  create() {\n    const app = this;\n    Utils.extend(app, {\n      statusbar: {\n        hide: Statusbar.hide,\n        show: Statusbar.show,\n        overlaysWebView: Statusbar.overlaysWebView,\n        setTextColor: Statusbar.setTextColor,\n        setBackgroundColor: Statusbar.setBackgroundColor,\n        isVisible: Statusbar.isVisible,\n        init: Statusbar.init.bind(app)\n      }\n    });\n  },\n\n  on: {\n    init() {\n      const app = this;\n      Statusbar.init.call(app);\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}