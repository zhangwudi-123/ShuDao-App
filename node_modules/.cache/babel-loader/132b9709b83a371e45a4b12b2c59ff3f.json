{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\n\nvar QRScannerOriginal =\n/** @class */\nfunction (_super) {\n  __extends(QRScannerOriginal, _super);\n\n  function QRScannerOriginal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QRScannerOriginal.prototype.prepare = function () {\n    return cordova(this, \"prepare\", {\n      \"callbackStyle\": \"node\"\n    }, arguments);\n  };\n\n  QRScannerOriginal.prototype.scan = function () {\n    return cordova(this, \"scan\", {\n      \"callbackStyle\": \"node\",\n      \"observable\": true,\n      \"clearFunction\": \"cancelScan\"\n    }, arguments);\n  };\n\n  QRScannerOriginal.prototype.show = function () {\n    return cordova(this, \"show\", {}, arguments);\n  };\n\n  QRScannerOriginal.prototype.hide = function () {\n    return cordova(this, \"hide\", {}, arguments);\n  };\n\n  QRScannerOriginal.prototype.enableLight = function () {\n    return cordova(this, \"enableLight\", {\n      \"callbackStyle\": \"node\"\n    }, arguments);\n  };\n\n  QRScannerOriginal.prototype.destroy = function () {\n    return cordova(this, \"destroy\", {}, arguments);\n  };\n\n  QRScannerOriginal.prototype.disableLight = function () {\n    return cordova(this, \"disableLight\", {\n      \"callbackStyle\": \"node\"\n    }, arguments);\n  };\n\n  QRScannerOriginal.prototype.useFrontCamera = function () {\n    return cordova(this, \"useFrontCamera\", {\n      \"callbackStyle\": \"node\"\n    }, arguments);\n  };\n\n  QRScannerOriginal.prototype.useBackCamera = function () {\n    return cordova(this, \"useBackCamera\", {\n      \"callbackStyle\": \"node\"\n    }, arguments);\n  };\n\n  QRScannerOriginal.prototype.useCamera = function (camera) {\n    return cordova(this, \"useCamera\", {\n      \"callbackStyle\": \"node\"\n    }, arguments);\n  };\n\n  QRScannerOriginal.prototype.pausePreview = function () {\n    return cordova(this, \"pausePreview\", {}, arguments);\n  };\n\n  QRScannerOriginal.prototype.resumePreview = function () {\n    return cordova(this, \"resumePreview\", {}, arguments);\n  };\n\n  QRScannerOriginal.prototype.getStatus = function () {\n    return cordova(this, \"getStatus\", {}, arguments);\n  };\n\n  QRScannerOriginal.prototype.openSettings = function () {\n    return cordova(this, \"openSettings\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  QRScannerOriginal.pluginName = \"QRScanner\";\n  QRScannerOriginal.plugin = \"cordova-plugin-qrscanner\";\n  QRScannerOriginal.pluginRef = \"QRScanner\";\n  QRScannerOriginal.repo = \"https://github.com/bitpay/cordova-plugin-qrscanner\";\n  QRScannerOriginal.platforms = [\"Android\", \"Browser\", \"iOS\", \"Windows\"];\n  return QRScannerOriginal;\n}(IonicNativePlugin);\n\nvar QRScanner = new QRScannerOriginal();\nexport { QRScanner };","map":null,"metadata":{},"sourceType":"module"}