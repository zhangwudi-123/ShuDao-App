{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Toolbar = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7Toolbar, _React$Component);\n\n  function F7Toolbar(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Toolbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Toolbar).call(this, props, context));\n    _this.__reactRefs = {};\n\n    _this.state = function () {\n      var self = _assertThisInitialized(_this);\n\n      var $f7 = self.$f7;\n\n      if (!$f7) {\n        self.$f7ready(function () {\n          self.setState({\n            _theme: self.$theme\n          });\n        });\n      }\n\n      return {\n        _theme: $f7 ? self.$theme : null\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(F7Toolbar, [{\n    key: \"hide\",\n    value: function hide(animate) {\n      var self = this;\n      if (!self.$f7) return;\n      self.$f7.toolbar.hide(this.refs.el, animate);\n    }\n  }, {\n    key: \"show\",\n    value: function show(animate) {\n      var self = this;\n      if (!self.$f7) return;\n      self.$f7.toolbar.show(this.refs.el, animate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var id = props.id,\n          style = props.style,\n          className = props.className,\n          inner = props.inner,\n          tabbar = props.tabbar,\n          labels = props.labels,\n          scrollable = props.scrollable,\n          hidden = props.hidden,\n          noShadow = props.noShadow,\n          noHairline = props.noHairline,\n          noBorder = props.noBorder,\n          topMd = props.topMd,\n          topIos = props.topIos,\n          topAurora = props.topAurora,\n          top = props.top,\n          bottomMd = props.bottomMd,\n          bottomIos = props.bottomIos,\n          bottomAurora = props.bottomAurora,\n          bottom = props.bottom,\n          position = props.position;\n      var theme = self.state._theme;\n      var classes = Utils.classNames(className, 'toolbar', {\n        tabbar: tabbar,\n        'toolbar-bottom': theme && theme.md && bottomMd || theme && theme.ios && bottomIos || theme && theme.aurora && bottomAurora || bottom || position === 'bottom',\n        'toolbar-top': theme && theme.md && topMd || theme && theme.ios && topIos || theme && theme.aurora && topAurora || top || position === 'top',\n        'tabbar-labels': labels,\n        'tabbar-scrollable': scrollable,\n        'toolbar-hidden': hidden,\n        'no-shadow': noShadow,\n        'no-hairline': noHairline || noBorder\n      }, Mixins.colorClasses(props));\n      return React.createElement('div', {\n        id: id,\n        style: style,\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        className: classes\n      }, this.slots['before-inner'], inner ? React.createElement('div', {\n        className: 'toolbar-inner'\n      }, this.slots['default']) : this.slots['default'], this.slots['after-inner']);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      self.$f7ready(function (f7) {\n        if (self.props.tabbar) f7.toolbar.setHighlight(self.refs.el);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var self = this;\n\n      if (self.props.tabbar && self.$f7) {\n        self.$f7.toolbar.setHighlight(self.refs.el);\n      }\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Toolbar;\n}(React.Component);\n\n__reactComponentSetProps(F7Toolbar, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  tabbar: Boolean,\n  labels: Boolean,\n  scrollable: Boolean,\n  hidden: Boolean,\n  noShadow: Boolean,\n  noHairline: Boolean,\n  noBorder: Boolean,\n  position: {\n    type: String,\n    default: undefined\n  },\n  topMd: {\n    type: Boolean,\n    default: undefined\n  },\n  topIos: {\n    type: Boolean,\n    default: undefined\n  },\n  topAurora: {\n    type: Boolean,\n    default: undefined\n  },\n  top: {\n    type: Boolean,\n    default: undefined\n  },\n  bottomMd: {\n    type: Boolean,\n    default: undefined\n  },\n  bottomIos: {\n    type: Boolean,\n    default: undefined\n  },\n  bottomAurora: {\n    type: Boolean,\n    default: undefined\n  },\n  bottom: {\n    type: Boolean,\n    default: undefined\n  },\n  inner: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7Toolbar.displayName = 'f7-toolbar';\nexport default F7Toolbar;","map":null,"metadata":{},"sourceType":"module"}