{"ast":null,"code":"import { __read } from \"tslib\";\n/* eslint-disable no-empty */\n\nimport { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useUpdateEffect from '../useUpdateEffect';\nimport { isFunction, isUndef } from '../utils';\nexport function createUseStorageState(getStorage) {\n  function useStorageState(key, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var storage;\n    var _a = options.onError,\n        onError = _a === void 0 ? function (e) {\n      console.error(e);\n    } : _a; // https://github.com/alibaba/hooks/issues/800\n\n    try {\n      storage = getStorage();\n    } catch (err) {\n      onError(err);\n    }\n\n    var serializer = function (value) {\n      if (options === null || options === void 0 ? void 0 : options.serializer) {\n        return options === null || options === void 0 ? void 0 : options.serializer(value);\n      }\n\n      return JSON.stringify(value);\n    };\n\n    var deserializer = function (value) {\n      if (options === null || options === void 0 ? void 0 : options.deserializer) {\n        return options === null || options === void 0 ? void 0 : options.deserializer(value);\n      }\n\n      return JSON.parse(value);\n    };\n\n    function getStoredValue() {\n      try {\n        var raw = storage === null || storage === void 0 ? void 0 : storage.getItem(key);\n\n        if (raw) {\n          return deserializer(raw);\n        }\n      } catch (e) {\n        onError(e);\n      }\n\n      if (isFunction(options === null || options === void 0 ? void 0 : options.defaultValue)) {\n        return options === null || options === void 0 ? void 0 : options.defaultValue();\n      }\n\n      return options === null || options === void 0 ? void 0 : options.defaultValue;\n    }\n\n    var _b = __read(useState(function () {\n      return getStoredValue();\n    }), 2),\n        state = _b[0],\n        setState = _b[1];\n\n    useUpdateEffect(function () {\n      setState(getStoredValue());\n    }, [key]);\n\n    var updateState = function (value) {\n      var currentState = isFunction(value) ? value(state) : value;\n      setState(currentState);\n\n      if (isUndef(currentState)) {\n        storage === null || storage === void 0 ? void 0 : storage.removeItem(key);\n      } else {\n        try {\n          storage === null || storage === void 0 ? void 0 : storage.setItem(key, serializer(currentState));\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    };\n\n    return [state, useMemoizedFn(updateState)];\n  }\n\n  return useStorageState;\n}","map":null,"metadata":{},"sourceType":"module"}