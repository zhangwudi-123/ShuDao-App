{"ast":null,"code":"import { getTargetElement } from '../utils/domTarget';\nimport useDeepCompareEffectWithTarget from '../utils/useDeepCompareWithTarget';\nimport useLatest from '../useLatest';\n\nvar useMutationObserver = function (callback, target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var callbackRef = useLatest(callback);\n  useDeepCompareEffectWithTarget(function () {\n    var element = getTargetElement(target);\n\n    if (!element) {\n      return;\n    }\n\n    var observer = new MutationObserver(callbackRef.current);\n    observer.observe(element, options);\n    return function () {\n      if (observer) {\n        observer.disconnect();\n      }\n    };\n  }, [options], target);\n};\n\nexport default useMutationObserver;","map":null,"metadata":{},"sourceType":"module"}