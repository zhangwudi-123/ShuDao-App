{"ast":null,"code":"import { window } from 'ssr-window';\nimport Support from './support';\n\nconst Device = function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  if (!ipad && macos && Support.touch && (screenWidth === 1024 && screenHeight === 1366 // Pro 12.9\n  || screenWidth === 834 && screenHeight === 1194 // Pro 11\n  || screenWidth === 834 && screenHeight === 1112 // Pro 10.5\n  || screenWidth === 768 && screenHeight === 1024 // other\n  )) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox; // Android\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // iOS\n\n\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  } // iOS 8+ changed UA\n\n\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  } // Webview\n\n\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone)) || window.matchMedia && window.matchMedia('(display-mode: standalone)').matches;\n  device.webview = device.webView;\n  device.standalone = device.webView; // Desktop\n\n  device.desktop = !(device.ios || device.android) || electron;\n\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n\n    if (device.macos) {\n      device.os = 'macos';\n    }\n\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  } // Pixel Ratio\n\n\n  device.pixelRatio = window.devicePixelRatio || 1; // Color Scheme\n\n  const DARK = '(prefers-color-scheme: dark)';\n  const LIGHT = '(prefers-color-scheme: light)';\n\n  device.prefersColorScheme = function prefersColorTheme() {\n    let theme;\n\n    if (window.matchMedia && window.matchMedia(LIGHT).matches) {\n      theme = 'light';\n    }\n\n    if (window.matchMedia && window.matchMedia(DARK).matches) {\n      theme = 'dark';\n    }\n\n    return theme;\n  }; // Export object\n\n\n  return device;\n}();\n\nexport default Device;","map":null,"metadata":{},"sourceType":"module"}