{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7Link from './link';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7NavLeft = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7NavLeft, _React$Component);\n\n  function F7NavLeft(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7NavLeft);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7NavLeft).call(this, props, context));\n\n    (function () {\n      Utils.bindMethods(_assertThisInitialized(_this), ['onBackClick']);\n    })();\n\n    return _this;\n  }\n\n  _createClass(F7NavLeft, [{\n    key: \"onBackClick\",\n    value: function onBackClick(event) {\n      this.dispatchEvent('back-click backClick click:back clickBack', event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var backLink = props.backLink,\n          backLinkUrl = props.backLinkUrl,\n          backLinkForce = props.backLinkForce,\n          backLinkShowText = props.backLinkShowText,\n          sliding = props.sliding,\n          className = props.className,\n          style = props.style,\n          id = props.id;\n      var linkEl;\n      var needBackLinkText = backLinkShowText;\n      if (typeof needBackLinkText === 'undefined') needBackLinkText = !this.$theme.md;\n\n      if (backLink) {\n        var text = backLink !== true && needBackLinkText ? backLink : undefined;\n        linkEl = React.createElement(F7Link, {\n          href: backLinkUrl || '#',\n          back: true,\n          icon: 'icon-back',\n          force: backLinkForce || undefined,\n          className: !text ? 'icon-only' : undefined,\n          text: text,\n          onClick: this.onBackClick\n        });\n      }\n\n      var classes = Utils.classNames(className, 'left', {\n        sliding: sliding\n      }, Mixins.colorClasses(props));\n      var children = [];\n      var slots = this.slots;\n\n      if (slots && Object.keys(slots).length) {\n        Object.keys(slots).forEach(function (key) {\n          children.push.apply(children, _toConsumableArray(slots[key]));\n        });\n      }\n\n      return React.createElement('div', {\n        id: id,\n        style: style,\n        className: classes\n      }, linkEl, children);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }]);\n\n  return F7NavLeft;\n}(React.Component);\n\n__reactComponentSetProps(F7NavLeft, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  backLink: [Boolean, String],\n  backLinkUrl: String,\n  backLinkForce: Boolean,\n  backLinkShowText: {\n    type: Boolean,\n    default: undefined\n  },\n  sliding: Boolean\n}, Mixins.colorProps));\n\nF7NavLeft.displayName = 'f7-nav-left';\nexport default F7NavLeft;","map":null,"metadata":{},"sourceType":"module"}