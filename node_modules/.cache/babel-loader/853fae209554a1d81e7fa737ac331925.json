{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7Popover = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7Popover, _React$Component);\n\n  function F7Popover(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7Popover);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7Popover).call(this, props, context));\n    _this.__reactRefs = {};\n\n    (function () {\n      Utils.bindMethods(_assertThisInitialized(_this), ['onOpen', 'onOpened', 'onClose', 'onClosed']);\n    })();\n\n    return _this;\n  }\n\n  _createClass(F7Popover, [{\n    key: \"onOpen\",\n    value: function onOpen(instance) {\n      this.dispatchEvent('popover:open popoverOpen', instance);\n    }\n  }, {\n    key: \"onOpened\",\n    value: function onOpened(instance) {\n      this.dispatchEvent('popover:opened popoverOpened', instance);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(instance) {\n      this.dispatchEvent('popover:close popoverClose', instance);\n    }\n  }, {\n    key: \"onClosed\",\n    value: function onClosed(instance) {\n      this.dispatchEvent('popover:closed popoverClosed', instance);\n    }\n  }, {\n    key: \"open\",\n    value: function open(animate) {\n      var self = this;\n      if (!self.f7Popover) return undefined;\n      return self.f7Popover.open(animate);\n    }\n  }, {\n    key: \"close\",\n    value: function close(animate) {\n      var self = this;\n      if (!self.f7Popover) return undefined;\n      return self.f7Popover.close(animate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var className = props.className,\n          id = props.id,\n          style = props.style;\n      var classes = Utils.classNames(className, 'popover', Mixins.colorClasses(props));\n      return React.createElement('div', {\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        },\n        id: id,\n        style: style,\n        className: classes\n      }, React.createElement('div', {\n        className: 'popover-angle'\n      }), React.createElement('div', {\n        className: 'popover-inner'\n      }, this.slots['default']));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      if (self.f7Popover) self.f7Popover.destroy();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var el = self.refs.el;\n      if (!el) return;\n      var props = self.props;\n      var target = props.target,\n          opened = props.opened,\n          backdrop = props.backdrop,\n          backdropEl = props.backdropEl,\n          closeByBackdropClick = props.closeByBackdropClick,\n          closeByOutsideClick = props.closeByOutsideClick,\n          closeOnEscape = props.closeOnEscape;\n      var popoverParams = {\n        el: el,\n        on: {\n          open: self.onOpen,\n          opened: self.onOpened,\n          close: self.onClose,\n          closed: self.onClosed\n        }\n      };\n      if (target) popoverParams.targetEl = target;\n      {\n        if ('closeByBackdropClick' in props) popoverParams.closeByBackdropClick = closeByBackdropClick;\n        if ('closeByOutsideClick' in props) popoverParams.closeByOutsideClick = closeByOutsideClick;\n        if ('closeOnEscape' in props) popoverParams.closeOnEscape = closeOnEscape;\n        if ('backdrop' in props) popoverParams.backdrop = backdrop;\n        if ('backdropEl' in props) popoverParams.backdropEl = backdropEl;\n      }\n      self.$f7ready(function () {\n        self.f7Popover = self.$f7.popover.create(popoverParams);\n\n        if (opened && target) {\n          self.f7Popover.open(target, false);\n        }\n      });\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      __reactComponentWatch(this, 'props.opened', prevProps, prevState, function (opened) {\n        var self = _this3;\n        if (!self.f7Popover) return;\n\n        if (opened) {\n          self.f7Popover.open();\n        } else {\n          self.f7Popover.close();\n        }\n      });\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7Popover;\n}(React.Component);\n\n__reactComponentSetProps(F7Popover, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  opened: Boolean,\n  target: [String, Object],\n  backdrop: Boolean,\n  backdropEl: [String, Object, window.HTMLElement],\n  closeByBackdropClick: Boolean,\n  closeByOutsideClick: Boolean,\n  closeOnEscape: Boolean\n}, Mixins.colorProps));\n\nF7Popover.displayName = 'f7-popover';\nexport default F7Popover;","map":null,"metadata":{},"sourceType":"module"}