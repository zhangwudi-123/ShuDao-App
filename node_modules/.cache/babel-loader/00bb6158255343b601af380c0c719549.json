{"ast":null,"code":"import { useRef } from 'react';\n\nvar useLoadingDelayPlugin = function (fetchInstance, _a) {\n  var loadingDelay = _a.loadingDelay,\n      ready = _a.ready;\n  var timerRef = useRef();\n\n  if (!loadingDelay) {\n    return {};\n  }\n\n  var cancelTimeout = function () {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n  };\n\n  return {\n    onBefore: function () {\n      cancelTimeout(); // Two cases:\n      // 1. ready === undefined\n      // 2. ready === true\n\n      if (ready !== false) {\n        timerRef.current = setTimeout(function () {\n          fetchInstance.setState({\n            loading: true\n          });\n        }, loadingDelay);\n      }\n\n      return {\n        loading: false\n      };\n    },\n    onFinally: function () {\n      cancelTimeout();\n    },\n    onCancel: function () {\n      cancelTimeout();\n    }\n  };\n};\n\nexport default useLoadingDelayPlugin;","map":null,"metadata":{},"sourceType":"module"}