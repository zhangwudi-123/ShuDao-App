{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport Preloader from './preloader';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7PageContent = /*#__PURE__*/function (_React$Component) {\n  _inherits(F7PageContent, _React$Component);\n\n  function F7PageContent(props, context) {\n    var _this;\n\n    _classCallCheck(this, F7PageContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(F7PageContent).call(this, props, context));\n    _this.__reactRefs = {};\n\n    (function () {\n      Utils.bindMethods(_assertThisInitialized(_this), ['onPtrPullStart', 'onPtrPullMove', 'onPtrPullEnd', 'onPtrRefresh', 'onPtrDone', 'onInfinite', 'onTabShow', 'onTabHide']);\n    })();\n\n    return _this;\n  }\n\n  _createClass(F7PageContent, [{\n    key: \"onPtrPullStart\",\n    value: function onPtrPullStart(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('ptr:pullstart ptrPullStart');\n    }\n  }, {\n    key: \"onPtrPullMove\",\n    value: function onPtrPullMove(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('ptr:pullmove ptrPullMove');\n    }\n  }, {\n    key: \"onPtrPullEnd\",\n    value: function onPtrPullEnd(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('ptr:pullend ptrPullEnd');\n    }\n  }, {\n    key: \"onPtrRefresh\",\n    value: function onPtrRefresh(el, done) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('ptr:refresh ptrRefresh', done);\n    }\n  }, {\n    key: \"onPtrDone\",\n    value: function onPtrDone(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('ptr:done ptrDone');\n    }\n  }, {\n    key: \"onInfinite\",\n    value: function onInfinite(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('infinite');\n    }\n  }, {\n    key: \"onTabShow\",\n    value: function onTabShow(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('tab:show tabShow');\n    }\n  }, {\n    key: \"onTabHide\",\n    value: function onTabHide(el) {\n      if (this.eventTargetEl !== el) return;\n      this.dispatchEvent('tab:hide tabHide');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      var props = self.props;\n      var ptr = props.ptr,\n          ptrPreloader = props.ptrPreloader,\n          ptrDistance = props.ptrDistance,\n          ptrBottom = props.ptrBottom,\n          ptrMousewheel = props.ptrMousewheel,\n          infinite = props.infinite,\n          infinitePreloader = props.infinitePreloader,\n          id = props.id,\n          style = props.style,\n          infiniteDistance = props.infiniteDistance,\n          infiniteTop = props.infiniteTop;\n      var ptrEl;\n      var infiniteEl;\n\n      if (ptr && ptrPreloader) {\n        ptrEl = React.createElement('div', {\n          className: 'ptr-preloader'\n        }, React.createElement(Preloader, null), React.createElement('div', {\n          className: 'ptr-arrow'\n        }));\n      }\n\n      if (infinite && infinitePreloader) {\n        infiniteEl = React.createElement(Preloader, {\n          className: 'infinite-scroll-preloader'\n        });\n      }\n\n      return React.createElement('div', {\n        id: id,\n        style: style,\n        className: self.classes,\n        'data-ptr-distance': ptrDistance || undefined,\n        'data-ptr-mousewheel': ptrMousewheel || undefined,\n        'data-infinite-distance': infiniteDistance || undefined,\n        ref: function ref(__reactNode) {\n          _this2.__reactRefs['el'] = __reactNode;\n        }\n      }, ptrBottom ? null : ptrEl, infiniteTop ? infiniteEl : null, self.slots.default, infiniteTop ? null : infiniteEl, ptrBottom ? ptrEl : null);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var self = this;\n      if (!self.$f7) return;\n      self.$f7.off('ptrPullStart', self.onPtrPullStart);\n      self.$f7.off('ptrPullMove', self.onPtrPullMove);\n      self.$f7.off('ptrPullEnd', self.onPtrPullEnd);\n      self.$f7.off('ptrRefresh', self.onPtrRefresh);\n      self.$f7.off('ptrDone', self.onPtrDone);\n      self.$f7.off('infinite', self.onInfinite);\n      self.$f7.off('tabShow', self.onTabShow);\n      self.$f7.off('tabHide', self.onTabHide);\n      self.eventTargetEl = null;\n      delete self.eventTargetEl;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var el = self.refs.el;\n      var _self$props = self.props,\n          ptr = _self$props.ptr,\n          infinite = _self$props.infinite,\n          tab = _self$props.tab;\n      self.$f7ready(function (f7) {\n        self.eventTargetEl = el;\n\n        if (ptr) {\n          f7.on('ptrPullStart', self.onPtrPullStart);\n          f7.on('ptrPullMove', self.onPtrPullMove);\n          f7.on('ptrPullEnd', self.onPtrPullEnd);\n          f7.on('ptrRefresh', self.onPtrRefresh);\n          f7.on('ptrDone', self.onPtrDone);\n        }\n\n        if (infinite) {\n          f7.on('infinite', self.onInfinite);\n        }\n\n        if (tab) {\n          f7.on('tabShow', self.onTabShow);\n          f7.on('tabHide', self.onTabHide);\n        }\n      });\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(events) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return __reactComponentDispatchEvent.apply(void 0, [this, events].concat(args));\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      var self = this;\n      var props = self.props;\n      var className = props.className,\n          tab = props.tab,\n          tabActive = props.tabActive,\n          ptr = props.ptr,\n          ptrBottom = props.ptrBottom,\n          infinite = props.infinite,\n          infiniteTop = props.infiniteTop,\n          hideBarsOnScroll = props.hideBarsOnScroll,\n          hideNavbarOnScroll = props.hideNavbarOnScroll,\n          hideToolbarOnScroll = props.hideToolbarOnScroll,\n          messagesContent = props.messagesContent,\n          loginScreen = props.loginScreen;\n      return Utils.classNames(className, 'page-content', {\n        tab: tab,\n        'tab-active': tabActive,\n        'ptr-content': ptr,\n        'ptr-bottom': ptrBottom,\n        'infinite-scroll-content': infinite,\n        'infinite-scroll-top': infiniteTop,\n        'hide-bars-on-scroll': hideBarsOnScroll,\n        'hide-navbar-on-scroll': hideNavbarOnScroll,\n        'hide-toolbar-on-scroll': hideToolbarOnScroll,\n        'messages-content': messagesContent,\n        'login-screen-content': loginScreen\n      }, Mixins.colorClasses(props));\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }, {\n    key: \"refs\",\n    get: function get() {\n      return this.__reactRefs;\n    },\n    set: function set(refs) {}\n  }]);\n\n  return F7PageContent;\n}(React.Component);\n\n__reactComponentSetProps(F7PageContent, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  tab: Boolean,\n  tabActive: Boolean,\n  ptr: Boolean,\n  ptrDistance: Number,\n  ptrPreloader: {\n    type: Boolean,\n    default: true\n  },\n  ptrBottom: Boolean,\n  ptrMousewheel: Boolean,\n  infinite: Boolean,\n  infiniteTop: Boolean,\n  infiniteDistance: Number,\n  infinitePreloader: {\n    type: Boolean,\n    default: true\n  },\n  hideBarsOnScroll: Boolean,\n  hideNavbarOnScroll: Boolean,\n  hideToolbarOnScroll: Boolean,\n  messagesContent: Boolean,\n  loginScreen: Boolean\n}, Mixins.colorProps));\n\nF7PageContent.displayName = 'f7-page-content';\nexport default F7PageContent;","map":null,"metadata":{},"sourceType":"module"}