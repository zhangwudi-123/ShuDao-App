{"ast":null,"code":"import React, { useState } from 'react';\nimport { CheckCircleFill, CloseCircleFill, InformationCircleFill, ClockCircleFill, ExclamationCircleFill } from 'antd-mobile-icons';\nimport classNames from 'classnames';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { isNodeWithContent } from '../../utils/is-node-with-content';\nimport Button from '../button';\nconst classPrefix = `adm-result-page`;\nconst iconRecord = {\n  success: CheckCircleFill,\n  error: CloseCircleFill,\n  info: InformationCircleFill,\n  waiting: ClockCircleFill,\n  warning: ExclamationCircleFill\n};\nconst defaultProps = {\n  status: 'info',\n  details: []\n};\nexport const ResultPage = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    status,\n    title,\n    description,\n    details,\n    icon,\n    primaryButtonText,\n    secondaryButtonText,\n    onPrimaryButtonClick,\n    onSecondaryButtonClick\n  } = props;\n  const resultIcon = icon || React.createElement(iconRecord[status]);\n  const [collapse, setCollapse] = useState(true);\n  const showSecondaryButton = isNodeWithContent(secondaryButtonText);\n  const showPrimaryButton = isNodeWithContent(primaryButtonText);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-header`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-icon`\n  }, resultIcon), React.createElement(\"div\", {\n    className: `${classPrefix}-title`\n  }, title), isNodeWithContent(description) ? React.createElement(\"div\", {\n    className: `${classPrefix}-description`\n  }, description) : null, details.length ? React.createElement(\"div\", {\n    className: `${classPrefix}-details`\n  }, (collapse ? details.slice(0, 3) : details).map((detail, index) => {\n    return React.createElement(\"div\", {\n      className: classNames(`${classPrefix}-detail`, detail.bold && `${classPrefix}-detail-bold`),\n      key: index\n    }, React.createElement(\"span\", null, detail.label), React.createElement(\"span\", null, detail.value));\n  }), details.length > 3 && React.createElement(\"div\", {\n    onClick: () => setCollapse(prev => !prev)\n  }, React.createElement(\"div\", {\n    className: classNames(`${classPrefix}-collapse`, !collapse && `${classPrefix}-collapse-active`)\n  }))) : null, React.createElement(\"div\", {\n    className: `${classPrefix}-bgWrapper`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-bg`\n  }))), React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, props.children), React.createElement(\"div\", {\n    className: `${classPrefix}-footer`\n  }, showSecondaryButton && React.createElement(Button, {\n    block: true,\n    color: 'default',\n    fill: 'solid',\n    size: 'large',\n    onClick: onSecondaryButtonClick,\n    className: `${classPrefix}-footer-btn`\n  }, secondaryButtonText), showPrimaryButton && showSecondaryButton && React.createElement(\"div\", {\n    className: `${classPrefix}-footer-space`\n  }), showPrimaryButton && React.createElement(Button, {\n    block: true,\n    color: 'primary',\n    fill: 'solid',\n    size: 'large',\n    onClick: onPrimaryButtonClick,\n    className: `${classPrefix}-footer-btn`\n  }, primaryButtonText))));\n};","map":null,"metadata":{},"sourceType":"module"}