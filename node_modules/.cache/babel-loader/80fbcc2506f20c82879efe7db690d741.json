{"ast":null,"code":"import $ from 'dom7';\nimport Messages from './messages-class';\nimport ConstructorMethods from '../../utils/constructor-methods';\nexport default {\n  name: 'messages',\n  static: {\n    Messages\n  },\n\n  create() {\n    const app = this;\n    app.messages = ConstructorMethods({\n      defaultSelector: '.messages',\n      constructor: Messages,\n      app,\n      domProp: 'f7Messages',\n      addMethods: 'renderMessages layout scroll clear removeMessage removeMessages addMessage addMessages'.split(' ')\n    });\n  },\n\n  on: {\n    tabBeforeRemove(tabEl) {\n      const app = this;\n      $(tabEl).find('.messages-init').each((index, messagesEl) => {\n        app.messages.destroy(messagesEl);\n      });\n    },\n\n    tabMounted(tabEl) {\n      const app = this;\n      $(tabEl).find('.messages-init').each((index, messagesEl) => {\n        app.messages.create({\n          el: messagesEl\n        });\n      });\n    },\n\n    pageBeforeRemove(page) {\n      const app = this;\n      page.$el.find('.messages-init').each((index, messagesEl) => {\n        app.messages.destroy(messagesEl);\n      });\n    },\n\n    pageInit(page) {\n      const app = this;\n      page.$el.find('.messages-init').each((index, messagesEl) => {\n        app.messages.create({\n          el: messagesEl\n        });\n      });\n    }\n\n  },\n  vnode: {\n    'messages-init': {\n      insert(vnode) {\n        const app = this;\n        const messagesEl = vnode.elm;\n        app.messages.create({\n          el: messagesEl\n        });\n      },\n\n      destroy(vnode) {\n        const app = this;\n        const messagesEl = vnode.elm;\n        app.messages.destroy(messagesEl);\n      }\n\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}