{"ast":null,"code":"import Utils from './utils';\nconst Mixins = {\n  colorProps: {\n    color: String,\n    colorTheme: String,\n    textColor: String,\n    bgColor: String,\n    borderColor: String,\n    rippleColor: String,\n    themeDark: Boolean\n  },\n\n  colorClasses(props) {\n    const {\n      color,\n      colorTheme,\n      textColor,\n      bgColor,\n      borderColor,\n      rippleColor,\n      themeDark\n    } = props;\n    return {\n      'theme-dark': themeDark,\n      [`color-${color}`]: color,\n      [`color-theme-${colorTheme}`]: colorTheme,\n      [`text-color-${textColor}`]: textColor,\n      [`bg-color-${bgColor}`]: bgColor,\n      [`border-color-${borderColor}`]: borderColor,\n      [`ripple-color-${rippleColor}`]: rippleColor\n    };\n  },\n\n  linkIconProps: {\n    icon: String,\n    iconMaterial: String,\n    iconF7: String,\n    iconIos: String,\n    iconMd: String,\n    iconAurora: String,\n    iconColor: String,\n    iconSize: [String, Number]\n  },\n  linkRouterProps: {\n    back: Boolean,\n    external: Boolean,\n    force: Boolean,\n    animate: {\n      type: Boolean,\n      default: undefined\n    },\n    ignoreCache: Boolean,\n    reloadCurrent: Boolean,\n    reloadAll: Boolean,\n    reloadPrevious: Boolean,\n    reloadDetail: {\n      type: Boolean,\n      default: undefined\n    },\n    routeTabId: String,\n    view: String,\n    routeProps: Object,\n    preventRouter: Boolean,\n    transition: String\n  },\n\n  linkRouterAttrs(props) {\n    const {\n      force,\n      reloadCurrent,\n      reloadPrevious,\n      reloadAll,\n      reloadDetail,\n      animate,\n      ignoreCache,\n      routeTabId,\n      view,\n      transition\n    } = props;\n    let dataAnimate;\n\n    if ('animate' in props && typeof animate !== 'undefined') {\n      dataAnimate = animate.toString();\n    }\n\n    let dataReloadDetail;\n\n    if ('reloadDetail' in props && typeof reloadDetail !== 'undefined') {\n      dataReloadDetail = reloadDetail.toString();\n    }\n\n    return {\n      'data-force': force || undefined,\n      'data-reload-current': reloadCurrent || undefined,\n      'data-reload-all': reloadAll || undefined,\n      'data-reload-previous': reloadPrevious || undefined,\n      'data-reload-detail': dataReloadDetail,\n      'data-animate': dataAnimate,\n      'data-ignore-cache': ignoreCache || undefined,\n      'data-route-tab-id': routeTabId || undefined,\n      'data-view': Utils.isStringProp(view) ? view : undefined,\n      'data-transition': Utils.isStringProp(transition) ? transition : undefined\n    };\n  },\n\n  linkRouterClasses(props) {\n    const {\n      back,\n      linkBack,\n      external,\n      preventRouter\n    } = props;\n    return {\n      back: back || linkBack,\n      external,\n      'prevent-router': preventRouter\n    };\n  },\n\n  linkActionsProps: {\n    searchbarEnable: [Boolean, String],\n    searchbarDisable: [Boolean, String],\n    searchbarClear: [Boolean, String],\n    searchbarToggle: [Boolean, String],\n    // Panel\n    panelOpen: [Boolean, String],\n    panelClose: [Boolean, String],\n    panelToggle: [Boolean, String],\n    // Popup\n    popupOpen: [Boolean, String],\n    popupClose: [Boolean, String],\n    // Actions\n    actionsOpen: [Boolean, String],\n    actionsClose: [Boolean, String],\n    // Popover\n    popoverOpen: [Boolean, String],\n    popoverClose: [Boolean, String],\n    // Login Screen\n    loginScreenOpen: [Boolean, String],\n    loginScreenClose: [Boolean, String],\n    // Picker\n    sheetOpen: [Boolean, String],\n    sheetClose: [Boolean, String],\n    // Sortable\n    sortableEnable: [Boolean, String],\n    sortableDisable: [Boolean, String],\n    sortableToggle: [Boolean, String],\n    // Card\n    cardOpen: [Boolean, String],\n    cardPreventOpen: [Boolean, String],\n    cardClose: [Boolean, String],\n    // Menu\n    menuClose: {\n      type: [Boolean, String],\n      default: undefined\n    }\n  },\n\n  linkActionsAttrs(props) {\n    const {\n      searchbarEnable,\n      searchbarDisable,\n      searchbarClear,\n      searchbarToggle,\n      panelOpen,\n      panelClose,\n      panelToggle,\n      popupOpen,\n      popupClose,\n      actionsOpen,\n      actionsClose,\n      popoverOpen,\n      popoverClose,\n      loginScreenOpen,\n      loginScreenClose,\n      sheetOpen,\n      sheetClose,\n      sortableEnable,\n      sortableDisable,\n      sortableToggle,\n      cardOpen,\n      cardClose\n    } = props;\n    return {\n      'data-searchbar': Utils.isStringProp(searchbarEnable) && searchbarEnable || Utils.isStringProp(searchbarDisable) && searchbarDisable || Utils.isStringProp(searchbarClear) && searchbarClear || Utils.isStringProp(searchbarToggle) && searchbarToggle || undefined,\n      'data-panel': Utils.isStringProp(panelOpen) && panelOpen || Utils.isStringProp(panelClose) && panelClose || Utils.isStringProp(panelToggle) && panelToggle || undefined,\n      'data-popup': Utils.isStringProp(popupOpen) && popupOpen || Utils.isStringProp(popupClose) && popupClose || undefined,\n      'data-actions': Utils.isStringProp(actionsOpen) && actionsOpen || Utils.isStringProp(actionsClose) && actionsClose || undefined,\n      'data-popover': Utils.isStringProp(popoverOpen) && popoverOpen || Utils.isStringProp(popoverClose) && popoverClose || undefined,\n      'data-sheet': Utils.isStringProp(sheetOpen) && sheetOpen || Utils.isStringProp(sheetClose) && sheetClose || undefined,\n      'data-login-screen': Utils.isStringProp(loginScreenOpen) && loginScreenOpen || Utils.isStringProp(loginScreenClose) && loginScreenClose || undefined,\n      'data-sortable': Utils.isStringProp(sortableEnable) && sortableEnable || Utils.isStringProp(sortableDisable) && sortableDisable || Utils.isStringProp(sortableToggle) && sortableToggle || undefined,\n      'data-card': Utils.isStringProp(cardOpen) && cardOpen || Utils.isStringProp(cardClose) && cardClose || undefined\n    };\n  },\n\n  linkActionsClasses(props) {\n    const {\n      searchbarEnable,\n      searchbarDisable,\n      searchbarClear,\n      searchbarToggle,\n      panelOpen,\n      panelClose,\n      panelToggle,\n      popupOpen,\n      popupClose,\n      actionsClose,\n      actionsOpen,\n      popoverOpen,\n      popoverClose,\n      loginScreenOpen,\n      loginScreenClose,\n      sheetOpen,\n      sheetClose,\n      sortableEnable,\n      sortableDisable,\n      sortableToggle,\n      cardOpen,\n      cardPreventOpen,\n      cardClose,\n      menuClose\n    } = props;\n    return {\n      'searchbar-enable': searchbarEnable || searchbarEnable === '',\n      'searchbar-disable': searchbarDisable || searchbarDisable === '',\n      'searchbar-clear': searchbarClear || searchbarClear === '',\n      'searchbar-toggle': searchbarToggle || searchbarToggle === '',\n      'panel-close': panelClose || panelClose === '',\n      'panel-open': panelOpen || panelOpen === '',\n      'panel-toggle': panelToggle || panelToggle === '',\n      'popup-close': popupClose || popupClose === '',\n      'popup-open': popupOpen || popupOpen === '',\n      'actions-close': actionsClose || actionsClose === '',\n      'actions-open': actionsOpen || actionsOpen === '',\n      'popover-close': popoverClose || popoverClose === '',\n      'popover-open': popoverOpen || popoverOpen === '',\n      'sheet-close': sheetClose || sheetClose === '',\n      'sheet-open': sheetOpen || sheetOpen === '',\n      'login-screen-close': loginScreenClose || loginScreenClose === '',\n      'login-screen-open': loginScreenOpen || loginScreenOpen === '',\n      'sortable-enable': sortableEnable || sortableEnable === '',\n      'sortable-disable': sortableDisable || sortableDisable === '',\n      'sortable-toggle': sortableToggle || sortableToggle === '',\n      'card-close': cardClose || cardClose === '',\n      'card-open': cardOpen || cardOpen === '',\n      'card-prevent-open': cardPreventOpen || cardPreventOpen === '',\n      'menu-close': menuClose || menuClose === ''\n    };\n  }\n\n};\nexport default Mixins;","map":null,"metadata":{},"sourceType":"module"}