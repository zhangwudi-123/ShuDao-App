{"ast":null,"code":"import $ from 'dom7';\nimport Utils from '../../utils/utils';\nconst Preloader = {\n  init(el) {\n    const app = this;\n    const $el = $(el);\n    if ($el.length === 0 || $el.children('.preloader-inner').length > 0 || $el.children('.preloader-inner-line').length > 0) return;\n    $el.append(Utils[`${app.theme}PreloaderContent`]);\n  },\n\n  // Modal\n  visible: false,\n\n  show() {\n    let color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'white';\n    const app = this;\n    if (Preloader.visible) return;\n    const preloaderInner = Utils[`${app.theme}PreloaderContent`] || '';\n    $('html').addClass('with-modal-preloader');\n    app.root.append(`\n      <div class=\"preloader-backdrop\"></div>\n      <div class=\"preloader-modal\">\n        <div class=\"preloader color-${color}\">${preloaderInner}</div>\n      </div>\n    `);\n    Preloader.visible = true;\n  },\n\n  hide() {\n    const app = this;\n    if (!Preloader.visible) return;\n    $('html').removeClass('with-modal-preloader');\n    app.root.find('.preloader-backdrop, .preloader-modal').remove();\n    Preloader.visible = false;\n  }\n\n};\nexport default {\n  name: 'preloader',\n\n  create() {\n    const app = this;\n    Utils.extend(app, {\n      preloader: {\n        init: Preloader.init.bind(app),\n        show: Preloader.show.bind(app),\n        hide: Preloader.hide.bind(app)\n      }\n    });\n  },\n\n  on: {\n    photoBrowserOpen(pb) {\n      const app = this;\n      pb.$el.find('.preloader').each((index, preloaderEl) => {\n        app.preloader.init(preloaderEl);\n      });\n    },\n\n    tabMounted(tabEl) {\n      const app = this;\n      $(tabEl).find('.preloader').each((index, preloaderEl) => {\n        app.preloader.init(preloaderEl);\n      });\n    },\n\n    pageInit(page) {\n      const app = this;\n      page.$el.find('.preloader').each((index, preloaderEl) => {\n        app.preloader.init(preloaderEl);\n      });\n    }\n\n  },\n  vnode: {\n    preloader: {\n      insert(vnode) {\n        const app = this;\n        const preloaderEl = vnode.elm;\n        app.preloader.init(preloaderEl);\n      }\n\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}