{"ast":null,"code":"import { __read } from \"tslib\";\nimport dayjs from 'dayjs';\nimport { useEffect, useMemo, useState } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils/index';\n\nvar calcLeft = function (target) {\n  if (!target) {\n    return 0;\n  } // https://stackoverflow.com/questions/4310953/invalid-date-in-safari\n\n\n  var left = dayjs(target).valueOf() - Date.now();\n  return left < 0 ? 0 : left;\n};\n\nvar parseMs = function (milliseconds) {\n  return {\n    days: Math.floor(milliseconds / 86400000),\n    hours: Math.floor(milliseconds / 3600000) % 24,\n    minutes: Math.floor(milliseconds / 60000) % 60,\n    seconds: Math.floor(milliseconds / 1000) % 60,\n    milliseconds: Math.floor(milliseconds) % 1000\n  };\n};\n\nvar useCountdown = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options || {},\n      leftTime = _a.leftTime,\n      targetDate = _a.targetDate,\n      _b = _a.interval,\n      interval = _b === void 0 ? 1000 : _b,\n      onEnd = _a.onEnd;\n\n  var target = useMemo(function () {\n    if ('leftTime' in options) {\n      return isNumber(leftTime) && leftTime > 0 ? Date.now() + leftTime : undefined;\n    } else {\n      return targetDate;\n    }\n  }, [leftTime, targetDate]);\n\n  var _c = __read(useState(function () {\n    return calcLeft(target);\n  }), 2),\n      timeLeft = _c[0],\n      setTimeLeft = _c[1];\n\n  var onEndRef = useLatest(onEnd);\n  useEffect(function () {\n    if (!target) {\n      // for stop\n      setTimeLeft(0);\n      return;\n    } // 立即执行一次\n\n\n    setTimeLeft(calcLeft(target));\n    var timer = setInterval(function () {\n      var _a;\n\n      var targetLeft = calcLeft(target);\n      setTimeLeft(targetLeft);\n\n      if (targetLeft === 0) {\n        clearInterval(timer);\n        (_a = onEndRef.current) === null || _a === void 0 ? void 0 : _a.call(onEndRef);\n      }\n    }, interval);\n    return function () {\n      return clearInterval(timer);\n    };\n  }, [target, interval]);\n  var formattedRes = useMemo(function () {\n    return parseMs(timeLeft);\n  }, [timeLeft]);\n  return [timeLeft, formattedRes];\n};\n\nexport default useCountdown;","map":null,"metadata":{},"sourceType":"module"}