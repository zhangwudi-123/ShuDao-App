"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.map");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.weak-map");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("regenerator-runtime/runtime");

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var types = _interopRequireWildcard(require("../store/core/types"));

var _session = _interopRequireDefault(require("../api/session"));

var _menu = _interopRequireDefault(require("../api/menu"));

var _fUi = require("@hvisions/f-ui");

var _toolkit = require("@hvisions/toolkit");

var _lodash = require("lodash");

var _Profile = _interopRequireDefault(require("./Profile"));

var _style = _interopRequireDefault(require("./style.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var LayoutControl = function LayoutControl(_ref) {
  var LayoutComponent = _ref.LayoutComponent,
      routes = _ref.routes;
  return function Wrap(props) {
    var _dispatch = (0, _reactRedux.useDispatch)();

    var _core = (0, _reactRedux.useSelector)(function (_ref2) {
      var core = _ref2.core;
      return core;
    });

    var _useState = (0, _react.useState)([]),
        _useState2 = _slicedToArray(_useState, 2),
        moduleList = _useState2[0],
        setModuleList = _useState2[1];

    var _useState3 = (0, _react.useState)('/'),
        _useState4 = _slicedToArray(_useState3, 2),
        currentPath = _useState4[0],
        setCurrentPath = _useState4[1];

    var _useState5 = (0, _react.useState)(false),
        _useState6 = _slicedToArray(_useState5, 2),
        ptrPreloader = _useState6[0],
        setPtrPreloader = _useState6[1];

    (0, _react.useEffect)(function () {
      if (!_toolkit.session.getAuthData()) {
        props.$f7router.navigate('/login');
        return;
      }

      if ((0, _lodash.isEmpty)(_core.moduleList)) {
        _session.default.findMenus(_toolkit.session.getAuthData().id).then(function (data) {
          _dispatch({
            type: types.CHANGE_MODULE_LIST,
            moduleList: data
          });

          setModuleList(data);
        });
      } else {
        setModuleList(_core.moduleList);
      }

      (0, _lodash.isEmpty)(_core.homeMenus) && _menu.default.findByUserId().then(function (res) {
        if (!(0, _lodash.isEmpty)(res)) {
          _dispatch({
            type: types.CHANGE_HOME_MENU,
            homeMenus: res.map(function (i) {
              return {
                icon: i.icon,
                id: i.menuId,
                fullName: i.menuName,
                urlAddress: i.menuUrl
              };
            })
          });
        }
      }); // isEmpty(_core.toolbarList) &&
      //   menuApi.findLevelOneByUserId().then((res) => {
      //     if (!isEmpty(res)) {
      //       _dispatch({
      //         type: types.CHANGE_TOOLBAR_LIST,
      //         toolbarList: res.map((i) => ({
      //           id: i.menuId,
      //           path: i.menuUrl,
      //           text: i.menuName,
      //           icon: i.icon || 'circle_grid_3x3'
      //         }))
      //       });
      //     }
      //   });
    }, []);

    var toolbarClick = function toolbarClick(path) {
      return function () {
        setCurrentPath(path);
      };
    };

    var renderLink = function renderLink() {
      return _core.toolbarList.map(function (item, index) {
        return _react.default.createElement(_fUi.Link, {
          key: index,
          tabLinkActive: currentPath === item.path,
          text: item.text,
          iconIos: "f7:".concat(item.icon),
          onClick: toolbarClick(item.path),
          style: {
            fontSize: 12
          }
        });
      });
    };
    /**
     * ### Toolbar导航栏切换后触发
     * - 配置后的Toolbar切换进入的页面,
     * - 因为Toolbar只能配置一级菜单,
     * - 默认会把当前菜单下的所有子项`modules`带入组件供使用.
     * @returns {JSX.Element} 返回选中Toolbar的页面
     */


    var renderToolbarComponent = function renderToolbarComponent() {
      var _current = _core.toolbarList.find(function (item) {
        return currentPath === item.path;
      });

      if (!_current) {
        return null;
      }

      var tempRoute = routes.find(function (p) {
        return p.path === _current.path;
      });
      var Com = !(0, _lodash.isEmpty)(tempRoute) && tempRoute.component;

      var _moduleTree = _toolkit.tree.formatTree(moduleList);

      var modulesChildren = _moduleTree.find(function (m) {
        return m.urlAddress === _current.path;
      });

      var modules = !(0, _lodash.isEmpty)(modulesChildren) && modulesChildren.children;
      return _react.default.createElement(Com, {
        modules: modules,
        moduleList: moduleList
      });
    };
    /**
     * ### 下拉刷新菜单
     
     */


    var handleRefresh =
    /*#__PURE__*/
    function () {
      var _ref3 = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(done) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _session.default.findMenus(_toolkit.session.getAuthData().id).then(function (data) {
                  _dispatch({
                    type: types.CHANGE_MODULE_LIST,
                    moduleList: data
                  });

                  setModuleList(data);
                });

              case 2:
                _context.next = 4;
                return _menu.default.findByUserId().then(function (res) {
                  if (!(0, _lodash.isEmpty)(res)) {
                    _dispatch({
                      type: types.CHANGE_HOME_MENU,
                      homeMenus: res.map(function (i) {
                        return {
                          icon: i.icon,
                          id: i.menuId,
                          fullName: i.menuName,
                          urlAddress: i.menuUrl
                        };
                      })
                    });
                  }
                });

              case 4:
                _context.next = 6;
                return setPtrPreloader(false);

              case 6:
                done();

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function handleRefresh(_x) {
        return _ref3.apply(this, arguments);
      };
    }();

    return _react.default.createElement(_fUi.Page, {
      noNavbar: true,
      className: _style.default.homepage,
      pageContent: false
    }, _react.default.createElement(_fUi.PageContent, {
      ptrPreloader: ptrPreloader,
      ptr: true,
      onPtrRefresh: handleRefresh,
      onPtrPullStart: function onPtrPullStart() {
        setPtrPreloader(true);
      }
    }, currentPath === '/' && _react.default.createElement(LayoutComponent, _extends({
      moduleList: moduleList
    }, props)), currentPath === '/profile' && _react.default.createElement(_Profile.default, props)), _react.default.createElement(_fUi.Toolbar, {
      tabbar: true,
      labels: true,
      noHairline: true,
      position: "bottom"
    }, _react.default.createElement(_fUi.Link, {
      tabLinkActive: currentPath === '/',
      text: "\u9996\u9875",
      iconIos: "f7:house",
      onClick: toolbarClick('/'),
      style: {
        fontSize: 12
      }
    }), _react.default.createElement(_fUi.Link, {
      text: "\u6211\u7684",
      tabLinkActive: currentPath === '/profile',
      iconIos: "f7:person",
      onClick: toolbarClick('/profile'),
      style: {
        fontSize: 12
      }
    })));
  };
};

var _default = LayoutControl;
exports.default = _default;