"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.map");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.weak-map");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _lodash = require("lodash");

var _Context = _interopRequireDefault(require("./Context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var getDisplayName = function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
};
/**
 *
 * @param {React.ReactNode} Component
 * @param {string | array} key eg: root.someLocation.top
 * @param {object} keyLocationMaps 对 key渲染位置 的定义， 可能这个 key 对应的渲染位置不是 children， 而是另一个 props
 * 每个 key 的默认 location 为 children
 */


var withConfig = function withConfig(Component, key) {
  var keyLocationMaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var ConfigComponent = function ConfigComponent(props) {
    var renderContent = function renderContent(config) {
      var children = [props.children];
      var configProps = {};

      var mergeComponent = function mergeComponent(comInConfg, k) {
        if (keyLocationMaps[k]) {
          var comInProps = props[keyLocationMaps[k]]; // 合并到新的 props

          configProps[keyLocationMaps[k]] = _react.default.createElement(_react.default.Fragment, null, comInProps, comInConfg);
        } else {
          // 没有 key location 定义， 就放到 children 里
          children.push(comInConfg);
        }
      };

      if ((0, _lodash.isArray)(key)) {
        key.forEach(function (k) {
          var comInConfg = (0, _lodash.get)(config, k);
          mergeComponent(comInConfg, k);
        });
      } else {
        var comInConfg = (0, _lodash.get)(config, key);
        mergeComponent(comInConfg, key);
      }

      return _react.default.createElement(Component, _extends({}, props, configProps), children.map(function (child, i) {
        return _react.default.createElement(_react.Fragment, {
          key: "config_".concat(i)
        }, child);
      }));
    };

    return _react.default.createElement(_Context.default.Consumer, null, renderContent);
  };

  ConfigComponent.displayName = "withConfig([".concat(key, "]").concat(getDisplayName(Component), ")");
  return ConfigComponent;
};

var _default = withConfig;
exports.default = _default;