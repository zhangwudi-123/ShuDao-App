"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.fill");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.from");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.map");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.weak-map");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var types = _interopRequireWildcard(require("../../store/core/types"));

var _toolkit = require("@hvisions/toolkit");

var _fUi = require("@hvisions/f-ui");

var _menu = _interopRequireDefault(require("../../api/menu"));

var _lodash = require("lodash");

var _style = _interopRequireDefault(require("./style.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * ### 导航栏设置
 * 过滤出所有一级菜单，配置底部Toolbar导航栏
 * @returns
 */
var ToolbarSetting = function ToolbarSetting(_ref) {
  var moduleList = _ref.moduleList,
      props = _objectWithoutProperties(_ref, ["moduleList"]);

  var _dispatch = (0, _reactRedux.useDispatch)();

  var _core = (0, _reactRedux.useSelector)(function (_ref2) {
    var core = _ref2.core;
    return core;
  });

  var _moduleTree = _toolkit.tree.formatTree(moduleList);
  /** 一级菜单MOCK数据 */


  var handleAddToolbar = function handleAddToolbar(item) {
    if (_core.toolbarList.length >= 3) {
      return;
    }

    if (_core.toolbarList.find(function (i) {
      return i.path == item.urlAddress;
    })) {
      return;
    }

    var newToolBarlist = [].concat(_toConsumableArray(_core.toolbarList), [{
      id: item.id,
      path: item.urlAddress,
      text: item.fullName,
      icon: item.icon || "circle_grid_3x3"
    }]);

    _menu.default.saveLevelOneMenu(newToolBarlist.map(function (i) {
      return i.id;
    }));

    _dispatch({
      type: types.CHANGE_TOOLBAR_LIST,
      toolbarList: newToolBarlist
    });
  };

  var handleRemoveToolbar = function handleRemoveToolbar(item) {
    var newList = _core.toolbarList.filter(function (i) {
      return i.path != item.path;
    });

    _menu.default.saveLevelOneMenu(newList.map(function (i) {
      return i.id;
    }));

    _dispatch({
      type: types.CHANGE_TOOLBAR_LIST,
      toolbarList: _toConsumableArray(newList)
    });
  };

  var renderHomeCard = function renderHomeCard() {
    var rootPages = moduleList.filter(function (i) {
      return i.parentId == 0;
    });
    return _react.default.createElement(_fUi.Row, null, rootPages.concat(Array((4 - rootPages.length % 4) % 4).fill({})).map(function (item, index) {
      if ((0, _lodash.isEmpty)(item)) {
        return _react.default.createElement(_fUi.Col, {
          key: index,
          width: "25"
        });
      }

      return _react.default.createElement(_fUi.Col, {
        key: index,
        width: "25"
      }, _react.default.createElement("div", {
        className: _style.default.navigateCard,
        key: index,
        style: {
          textAlign: "center"
        },
        onClick: function onClick() {
          handleAddToolbar(item);
        }
      }, _react.default.createElement(_fUi.Icon, {
        icon: item.icon || "circle_grid_3x3",
        f7: item.icon || "circle_grid_3x3",
        text: item.fullName
      }), _react.default.createElement("div", {
        className: _style.default.cardFullName
      }, item.fullName), _core.toolbarList.length < 3 && (0, _lodash.isEmpty)(_core.toolbarList.find(function (templist) {
        return templist.path == item.urlAddress;
      })) && _react.default.createElement(_fUi.Badge, {
        color: "green",
        style: {
          position: "absolute",
          top: "-8px",
          right: 8,
          width: 16,
          "--f7-badge-size": "18px"
        }
      }, _react.default.createElement(_fUi.Icon, {
        f7: "plus",
        style: {
          fontSize: 12
        }
      }))));
    }));
  };

  var renderLink = function renderLink() {
    return _core.toolbarList.map(function (item, index) {
      return _react.default.createElement("a", {
        key: index,
        className: "link",
        style: {
          paddingTop: 0,
          paddingBottom: 0
        }
      }, _react.default.createElement("div", {
        key: index,
        style: {
          position: "relative"
        }
      }, _react.default.createElement(_fUi.Link, {
        key: index,
        text: item.text,
        iconIos: "f7:".concat(item.icon),
        icon: item.icon || "circle_grid_3x3",
        style: {
          fontSize: 12
        },
        onClick: function onClick() {
          return handleRemoveToolbar(item);
        }
      }), _react.default.createElement(_fUi.Badge, {
        color: "red",
        style: {
          position: "absolute",
          top: "0",
          right: 0,
          width: 16,
          "--f7-badge-size": "18px"
        }
      }, _react.default.createElement(_fUi.Icon, {
        f7: "minus",
        style: {
          fontSize: 12
        }
      }))));
    });
  };

  return _react.default.createElement("div", null, _react.default.createElement(_fUi.Toolbar, {
    labels: true,
    position: "top"
  }, _react.default.createElement("a", {
    className: "link",
    style: {
      paddingTop: 0,
      paddingBottom: 0
    }
  }, _react.default.createElement("div", {
    style: {
      position: "relative"
    }
  }, _react.default.createElement(_fUi.Link, {
    text: "\u9996\u9875",
    iconIos: "f7:house",
    style: {
      fontSize: 12
    }
  }))), renderLink(), _react.default.createElement("a", {
    className: "link",
    style: {
      paddingTop: 0,
      paddingBottom: 0
    }
  }, _react.default.createElement("div", {
    style: {
      position: "relative"
    }
  }, _react.default.createElement(_fUi.Link, {
    text: "\u6211\u7684",
    iconIos: "f7:person",
    style: {
      fontSize: 12
    }
  })))), _react.default.createElement("br", null), _react.default.createElement("br", null), _react.default.createElement("br", null), _react.default.createElement("div", {
    className: _style.default.navigate
  }, (0, _lodash.isEmpty)(moduleList) && _react.default.createElement(_fUi.Block, {
    strong: true,
    inset: true,
    className: "skeleton-text skeleton-effect-blink"
  }, _react.default.createElement(_fUi.Row, null, Array(4).fill({}).map(function (module, index) {
    return _react.default.createElement(_fUi.Col, {
      width: "25",
      key: index
    }, _react.default.createElement("div", {
      className: _style.default.navigateCard
    }, _react.default.createElement(_fUi.SkeletonBlock, {
      style: {
        width: "30px",
        height: "30px"
      },
      slot: "media"
    }), _react.default.createElement("div", {
      className: "skeleton-text"
    }, "aaaaaaa")));
  }))), !(0, _lodash.isEmpty)(moduleList) && _react.default.createElement(_fUi.Block, {
    strong: true,
    inset: true
  }, renderHomeCard())));
};

var _default = ToolbarSetting;
exports.default = _default;