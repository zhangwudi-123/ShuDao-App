"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = configureStore;

var _redux = require("redux");

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var _clientMiddleware = _interopRequireDefault(require("./clientMiddleware"));

var _toolkit = require("@hvisions/toolkit");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function configureStore(reduces) {
  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  // middlewares
  var reducer = (0, _redux.combineReducers)(_objectSpread({}, reduces)); // async reduces middleware

  var middlewares = [(0, _clientMiddleware.default)(new _toolkit.Service()), _reduxThunk.default]; // ONLY in dev environment and if we have redux devtools installed hook into it.

  var reduxDevtoolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__ || window.devToolsExtension;

  if (reduxDevtoolsExtension) {
    var _enhancer = (0, _redux.compose)(_redux.applyMiddleware.apply(void 0, middlewares), reduxDevtoolsExtension());

    return (0, _redux.createStore)(reducer, initialState, _enhancer);
  }

  var enhancer = (0, _redux.compose)(_redux.applyMiddleware.apply(void 0, middlewares));
  return (0, _redux.createStore)(reducer, initialState, enhancer);
}