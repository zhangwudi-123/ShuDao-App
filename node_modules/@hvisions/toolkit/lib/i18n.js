"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.load = load;
exports.getFormattedMsg = getFormattedMsg;
exports.default = exports.getLocalSettings = exports.getAntLocale = exports.setAntLocales = exports.setLocales = exports.LOCALES = exports.DEFAULT_LOCALE = void 0;

var _reactIntlUniversal = _interopRequireDefault(require("react-intl-universal"));

var _lodash = require("lodash");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_LOCALE = 'zh_CN';
exports.DEFAULT_LOCALE = DEFAULT_LOCALE;
var LOCALES = {
  en_US: 'English',
  zh_CN: '中文'
}; // locale data

exports.LOCALES = LOCALES;
var locales = {
  en_US: {},
  zh_CN: {}
};
var antdLocales = {
  en_US: {},
  zh_CN: {}
};

var setLocales = function setLocales(l) {
  return locales = (0, _lodash.merge)({}, locales, l);
};

exports.setLocales = setLocales;

var setAntLocales = function setAntLocales(l) {
  return antdLocales = (0, _lodash.merge)({}, antdLocales, l);
};

exports.setAntLocales = setAntLocales;

var getAntLocale = function getAntLocale() {
  var defalutLocale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_LOCALE;
  return antdLocales[defalutLocale];
};

exports.getAntLocale = getAntLocale;

var getLocalSettings = function getLocalSettings() {
  var defalutLocale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_LOCALE;

  // 从 localStorage 获取语言
  if (window.localStorage && window.localStorage.getItem('locale')) {
    return window.localStorage.getItem('locale');
  } // 未设置过返回参数默认值


  return defalutLocale;
};

exports.getLocalSettings = getLocalSettings;

function load() {
  var locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_LOCALE;
  return _reactIntlUniversal.default.init({
    currentLocale: locale,
    locales: locales
  });
}

function getFormattedMsg(key) {
  var variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var def = arguments[2];

  if (typeof variables === 'string' && arguments.length === 2) {
    def = variables;
  }

  return _reactIntlUniversal.default.get(key, variables).d(key) || def;
}

var _default = load;
exports.default = _default;